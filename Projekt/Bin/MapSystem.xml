<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MapSystem</name>
    </assembly>
    <members>
        <member name="T:Engine.MapSystem.RegionType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.Region"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.MapObject"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapGeneralObjectType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.MapGeneralObject"/> entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectType.OnLoad(Engine.FileSystem.TextBlock)">
            <summary>
            Called when the type during loading.
            </summary>
            <param name="block">The text block in which data of type will be loaded.</param>
            <returns><b>true</b> if the data are correct; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObjectType.OnSave(Engine.FileSystem.TextBlock)">
            <summary>
            Called when the type during saving.
            </summary>
            <param name="block">The text block in which data of type will be saved.</param>
            <returns><b>true</b> if the data are correct; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObjectType.OnIsExistsReferenceToObject(System.Object)">
            <summary>
            Whether to check up there is a link to object.
            </summary>
            <remarks>
            This method it is necessary to redirect to all of you created 
            <b>MapObject.MapObjectCreateObjectCollection</b> objects and 
            for all custom not serializable <b>EntityType</b> fields. 
            It is necessary for normal work of Resource Editor.
            </remarks>
            <param name="obj">The cheched object.</param>
            <returns><b>true</b> if a link to object is exists; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObjectType.OnChangeReferencesToObject(System.Object,System.Object)">
            <summary>
            Replaces the link of all objects to another.
            </summary>
            <remarks>
            This method it is necessary to redirect to all of you created 
            <b>MapObject.MapObjectCreateObjectCollection</b> objects and 
            for all custom not serializable <b>EntityType</b> fields. 
            It is necessary for normal work of Resource Editor.
            </remarks>
            <param name="obj">The source link to object.</param>
            <param name="newValue">The new link to object.</param>
        </member>
        <member name="P:Engine.MapSystem.MapObjectType.PhysicsModel">
            <summary>
            Gets or sets the name of physics model.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectType.AttachedObjects">
            <summary>
            Gets the collection of attached objects. <b>Don't modify</b>.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Region">
            <summary>
            Defines a region on a map.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObject">
            <summary>
            Defines a base map object.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapGeneralObject">
            <summary>
            Defines the base class for objects on the map. The parent of objects based on this call is always childs of Map.Instance.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapGeneralObject.OnRenderFrame">
            <summary>
            Called before the render frame will be rendered.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapGeneralObject.OnRender(Engine.Renderer.Camera)">
            <summary>
            Called before the object it will be rendered.
            </summary>
            <param name="camera">The render camera.</param>
        </member>
        <member name="M:Engine.MapSystem.MapGeneralObject.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="P:Engine.MapSystem.MapGeneralObject.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnLoad(Engine.FileSystem.TextBlock)">
            <summary>
            Called while entity type is loading.
            </summary>
            <param name="block">The text block from which data of entity will be loaded.</param>
            <returns><b>true</b> if the entity successfully loaded; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnSave(Engine.FileSystem.TextBlock)">
            <summary>
            Called while entity type is saving.
            </summary>
            <param name="block">The text block in which data of entity will be saved.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.SetTransform(Engine.MathEx.Vec3,Engine.MathEx.Quat,Engine.MathEx.Vec3)">
            <summary>
            Sets the transformation of the object.
            </summary>
            <remarks>
            <para>
            The same effect as set of three properties (<see cref="P:Engine.MapSystem.MapObject.Position"/>, 
            <see cref="P:Engine.MapSystem.MapObject.Rotation"/>, <see cref="P:Engine.MapSystem.MapObject.Scale"/>) has this method.
            The difference consists what to cause one method more quickly, than to set three properties.
            </para>
            </remarks>
            <param name="pos">The object position.</param>
            <param name="rot">The object rotation.</param>
            <param name="scl">The object scale.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnSetTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Called when the transformation of object is changed.
            </summary>
            <param name="pos">The new position.</param>
            <param name="rot">The new rotation.</param>
            <param name="scl">The new scale.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.SetOldTransform(Engine.MathEx.Vec3,Engine.MathEx.Quat,Engine.MathEx.Vec3)">
            <summary>
            Sets the old transformation of object.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObject.CopyTransform(Engine.MapSystem.MapObject)">
            <summary>
            Copies parameters of transformation from other object.
            </summary>
            <remarks>
            The method copies both current and old transformation.
            </remarks>
            <param name="from">The source object.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnCopyTransform(Engine.MapSystem.MapObject)">
            <summary>
            Called when the method <see cref="M:Engine.MapSystem.MapObject.CopyTransform(Engine.MapSystem.MapObject)"/> is called.
            </summary>
            <param name="from">The source object.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.RecalculateMapBounds">
            <summary>
            Recalculates object <see cref="P:Engine.MapSystem.MapObject.MapBounds"/>.
            </summary>
            <remarks>
            Usually object bounds recalculation is completely automatic, 
            but in some rare cases we need additional updating.
            </remarks>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnCalculateMapBounds(Engine.MathEx.Bounds@)">
            <summary>
            Called when the bounds of object calculate.
            </summary>
            <remarks>
            By means of this method it is possible to change standard bounds to others.
            </remarks>
            <param name="bounds">The bounds of object.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.LoadPhysicsModel(System.String)">
            <summary>
            Loads new physics model.
            </summary>
            <param name="fileName"></param>
            <remarks>
            Need reset Body properties for attached objects before call this method.
            </remarks>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnPostCreate2(System.Boolean)">
            <summary>
            Called after the entity is added into the world. This method is called after <see cref="M:Engine.EntitySystem.Entity.OnPostCreate(System.Boolean)"/> method.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnTick">
            <summary>
            Called when has occured Tick in the world. 
            </summary>
            <remarks>
            <para>This method will be caused, only if the entity is signed on timer events. To subscribe for timer events it is possible by means of method <see cref="M:Engine.EntitySystem.Entity.SubscribeToTickEvent"/>.</para>
            </remarks>
            <seealso cref="M:Engine.EntitySystem.Entity.SubscribeToTickEvent"/>
            <seealso cref="M:Engine.EntitySystem.Entity.UnsubscribeToTickEvent"/>
            <seealso cref="P:Engine.EntitySystem.Entity.TickDelta"/>
            <seealso cref="E:Engine.EntitySystem.Entity.Tick"/>
            <seealso cref="P:Engine.EntitySystem.EntitySystemWorld.GameFPS"/>
            <seealso cref="P:Engine.EntitySystem.EntitySystemWorld.Simulation"/>
        </member>
        <member name="M:Engine.MapSystem.MapObject.GetInterpolatedPosition">
            <summary>
            Returns the interpolated position of object.
            </summary>
            <returns>The interpolated position.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.GetInterpolatedRotation">
            <summary>
            Returns the interpolated rotation of object.
            </summary>
            <returns>The interpolated rotation.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.GetInterpolatedScale">
            <summary>
            Returns the interpolated scale of object.
            </summary>
            <returns>The interpolated scale.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.GetInterpolatedTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Returns the interpolated transformation of object.
            </summary>
            <param name="pos">The interpolated position.</param>
            <param name="rot">The interpolated rotation.</param>
            <param name="scl">The interpolated scale.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnRenderFrame">
            <summary>
            Called before the render frame will be rendered.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnRender(Engine.Renderer.Camera)">
            <summary>
            Called before the object it will be rendered.
            </summary>
            <param name="camera">The render camera.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.Attach(Engine.MapSystem.MapObjectAttachedObject)">
            <summary>
            To attach object.
            </summary>
            <param name="attachedObject">The attached object.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.Detach(Engine.MapSystem.MapObjectAttachedObject)">
            <summary>
            To detach object.
            </summary>
            <param name="attachedObject">The attached object.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.CreatePhysicsModel">
            <summary>
            Creates the empty physics model of object.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObject.DestroyPhysicsModel">
            <summary>
            Destroys the physics model of object.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnAttach(Engine.MapSystem.MapObjectAttachedObject)">
            <summary>
            Called when the object is attached.
            </summary>
            <param name="attachedObject">The attached object.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnDetach(Engine.MapSystem.MapObjectAttachedObject)">
            <summary>
            Called when the object is detached.
            </summary>
            <param name="attachedObject">The attached object.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnAttachToMapObject">
            <summary>
            Caused after object has attached to parent map object.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObject.OnDetachFromMapObject">
            <summary>
            Caused before object has detached from parent map object.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObject.GetBox">
            <summary>
            Calculates the box of object.
            </summary>
            <returns>The box of object.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.GetTransform">
            <summary>
            Calculates the transformation of object as Matrix.
            </summary>
            <returns>The transformation of object as Matrix.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.GetFirstAttachedObjectByAlias(System.String)">
            <summary>
            Returns first attached object by the Alias property.
            </summary>
            <param name="alias">The alias.</param>
            <returns>The attached object.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.GetAllAttachedObjectsByAlias(System.String)">
            <summary>
            Returns all attached objects by the Alias property.
            </summary>
            <param name="alias">The alias.</param>
            <returns>The attached object.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.GetBoneSlotFromAttachedMeshes(System.String)">
            <summary>
            Returns the bone slot which is exists in the attached objects.
            </summary>
            <param name="boneSlotName">The name of the bone slot.</param>
            <returns>Returns <b>MeshObject.BoneSlot</b> if the slot is exists; otherwise, <b>null</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.Editor_CheckSelectionByRay(Engine.MathEx.Ray,System.Single@,System.Single@)">
            <summary>
            Caused when the user tries to select object the mouse.
            </summary>
            <param name="ray">The selection ray.</param>
            <param name="rayScale">The position of intersection on the ray.</param>
            <param name="priority">
            Priority of selection. It is by default equal <b>0.5</b>.
            The object with the highest priority will be selected.
            </param>
            <returns>Returns <b>true</b> the object is selected; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObject.Editor_RenderSelectionBorder(Engine.Renderer.Camera,System.Boolean,Engine.Renderer.DynamicMeshManager,Engine.Renderer.DynamicMeshManager.MaterialData)">
            <summary>
            Caused when it is necessary to draw a selection border in the Map Editor.
            </summary>
            <param name="camera">The destination camera.</param>
            <param name="simpleGeometry"></param>
            <param name="manager"></param>
            <param name="material"></param>
        </member>
        <member name="M:Engine.MapSystem.MapObject.AssociateSceneNodeWithMapObject(Engine.Renderer.SceneNode,Engine.MapSystem.MapObject)">
            <summary>
            Need just for see <see cref="M:Engine.MapSystem.MapObject.GetMapObjectBySceneNode(Engine.Renderer.SceneNode)"/>.
            </summary>
            <param name="mapObject"></param>
            <param name="sceneNode"></param>
        </member>
        <member name="P:Engine.MapSystem.MapObject.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.Position">
            <summary>
            Gets or sets the position of the object in the world.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.Rotation">
            <summary>
            Gets or sets the rotation of the object in the world.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.Scale">
            <summary>
            Gets or sets the scaling of the object.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.MapObject.TransformChange">
            <summary>
            Occurs when the transformation of object is changed.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.OldPosition">
            <summary>
            Gets or sets the old position of object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.OldRotation">
            <summary>
            Gets or sets the old rotation of object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.OldScale">
            <summary>
            Gets or sets the old scale of object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.MapBounds">
            <summary>
            Gets the bounds of object.
            </summary>
            <remarks>
            Bounds of object calculated automatically. It consider dimensions of meshes, 
            physical models, etc.
            </remarks>
        </member>
        <member name="E:Engine.MapSystem.MapObject.Render">
            <summary>
            Occurs before the object it will be rendered.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.MapObject.AttachEvent">
            <summary>
            Occurs when the object is attached.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.MapObject.DetachEvent">
            <summary>
            Occurs when the object is detached.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.AttachedObjects">
            <summary>
            Gets the collection of attached objects. <b>Don't modify</b>.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.PhysicsModel">
            <summary>
            Gets the physics model of object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.AttachedMapObjectParent">
            <summary>
            Gets the object to which is attached the this object.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.MapObject.AttachToMapObject">
            <summary>
            Occurs after object has attached to parent map object.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.MapObject.DetachFromMapObject">
            <summary>
            Occurs before object has detached from parent map object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.LastTickTime">
            <summary>
            Gets the last Tick time.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.Visible">
            <summary>
            Gets or sets a value indicating whether the entity is visible.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.MapObject.VisibleChange">
            <summary>
            Occurs when the visible flag of object is changed.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.SceneGraphGroup">
            <summary>
            Gets or sets the group for the scene manager.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.EditorLayer">
            <summary>
            Gets or sets the layer where the object is placed. Layers are configured in the Objects window.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.EditorSelectable">
            <summary>
            Gets or sets a value indicating whether the entity can be selected in the Map Editor.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObject.AutoVerticalAlignment">
            <summary>
            Gets or sets the mode of automatic alignment by Z axis. Using this property developer can configure automatic alignment of the object vertically.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObject.TransformChangeDelegate">
            <summary>
            Represents the method that handles a <see cref="E:Engine.MapSystem.MapObject.TransformChange"/> event.
            </summary>
            <param name="entity">The map object.</param>
        </member>
        <member name="T:Engine.MapSystem.MapObject.RenderDelegate">
            <summary>
            Represents the method that handles a <see cref="E:Engine.MapSystem.MapObject.Render"/> event.
            </summary>
            <param name="entity">The this object.</param>
            <param name="camera">The render camera.</param>
        </member>
        <member name="T:Engine.MapSystem.MapObject.AttachDetachDelegate">
            <summary>
            Represents the method that handles a <see cref="E:Engine.MapSystem.MapObject.AttachEvent"/> and <see cref="E:Engine.MapSystem.MapObject.DetachEvent"/> event.
            </summary>
            <param name="entity">The map object.</param>
            <param name="attachedObject">The attached object.</param>
        </member>
        <member name="T:Engine.MapSystem.MapObject.AttachDetachToMapObjectDelegate">
            <summary>
            Represents the method that handles a <see cref="E:Engine.MapSystem.MapObject.AttachToMapObject"/> and <see cref="E:Engine.MapSystem.MapObject.DetachFromMapObject"/> event.
            </summary>
            <param name="entity">The map object.</param>
        </member>
        <member name="T:Engine.MapSystem.MapObject.VisibleChangeDelegate">
            <summary>
            Represents the method that handles a <see cref="E:Engine.MapSystem.MapObject.VisibleChange"/> event.
            </summary>
            <param name="entity">The map object.</param>
        </member>
        <member name="M:Engine.MapSystem.Region.OnLoad(Engine.FileSystem.TextBlock)">
            <summary>
            Called while entity type is loading.
            </summary>
            <param name="block">The text block from which data of entity will be loaded.</param>
            <returns><b>true</b> if the entity successfully loaded; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.Region.OnSave(Engine.FileSystem.TextBlock)">
            <summary>
            Called while entity type is saving.
            </summary>
            <param name="block">The text block in which data of entity will be saved.</param>
        </member>
        <member name="M:Engine.MapSystem.Region.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.Region.OnTick">
            <summary>
            Called when has occured Tick in the world. 
            </summary>
            <remarks>
            <para>This method will be caused, only if the entity is signed on timer events. To subscribe for timer events it is possible by means of method <see cref="M:Engine.EntitySystem.Entity.SubscribeToTickEvent"/>.</para>
            </remarks>
            <seealso cref="M:Engine.EntitySystem.Entity.SubscribeToTickEvent"/>
            <seealso cref="M:Engine.EntitySystem.Entity.UnsubscribeToTickEvent"/>
            <seealso cref="P:Engine.EntitySystem.Entity.TickDelta"/>
            <seealso cref="E:Engine.EntitySystem.Entity.Tick"/>
            <seealso cref="P:Engine.EntitySystem.EntitySystemWorld.GameFPS"/>
            <seealso cref="P:Engine.EntitySystem.EntitySystemWorld.Simulation"/>
        </member>
        <member name="M:Engine.MapSystem.Region.OnDeleteSubscribedToDeletionEvent(Engine.EntitySystem.Entity)">
            <summary>
            Called when the entity related with this entity is deleted.
            </summary>
            <param name="entity">The deleted entity.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.SubscribeToDeletionEvent(Engine.EntitySystem.Entity)"/>
            <seealso cref="M:Engine.EntitySystem.Entity.UnsubscribeToDeletionEvent(Engine.EntitySystem.Entity)"/>
            <seealso cref="E:Engine.EntitySystem.Entity.DeleteSubscribedToDeletionEvent"/>
        </member>
        <member name="M:Engine.MapSystem.Region.OnObjectIn(Engine.MapSystem.MapObject)">
            <summary>
            Caused when the object gets in region.
            </summary>
            <param name="obj">The map object.</param>
        </member>
        <member name="M:Engine.MapSystem.Region.OnObjectOut(Engine.MapSystem.MapObject)">
            <summary>
            Caused when the object leaves in region.
            </summary>
            <param name="obj">The map object.</param>
        </member>
        <member name="M:Engine.MapSystem.Region.OnSetTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Called when the transformation of object is changed.
            </summary>
            <param name="pos">The new position.</param>
            <param name="rot">The new rotation.</param>
            <param name="scl">The new scale.</param>
        </member>
        <member name="M:Engine.MapSystem.Region.OnCalculateMapBounds(Engine.MathEx.Bounds@)">
            <summary>
            Called when the bounds of object calculate.
            </summary>
            <remarks>
            By means of this method it is possible to change standard bounds to others.
            </remarks>
            <param name="bounds">The bounds of object</param>
        </member>
        <member name="M:Engine.MapSystem.Region.OnRender(Engine.Renderer.Camera)">
            <summary>
            Called before the object it will be rendered.
            </summary>
            <param name="camera">The render camera.</param>
        </member>
        <member name="P:Engine.MapSystem.Region.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Region.Enabled">
            <summary>
            A value indicating whether the region enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Region.ShapeType">
            <summary>
            Shape of the region.
            </summary>
            <remarks>
            Available forms: in the form of a parallelepiped (Box); in the form of spheres (Sphere); as a capsule (Capsule).
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Region.Filter">
            <summary>
            Mode filtering by object type.
            </summary>
            <remarks>
            Available filtering options: use all the facilities (All); use only those objects that have a physical body (OnlyBodies); use only those objects that have a physical body which is marked as dynamic (OnlyDinamicBodies).
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Region.CheckType">
            <summary>
            A method for determining an object getting into the region.
            </summary>
            <remarks>
            Available methods are: the intersection of the size of the object with the region (Bounds); getting the center of the object in the region (Center).
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Region.ObjectsInRegion">
            <summary>
            Gets the collection of a objects which are in region.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.Region.ObjectIn">
            <summary>
            Occurs when the object gets in region.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.Region.ObjectOut">
            <summary>
            Occurs when the object leaves in region.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Region.CheckTypes">
            <summary>
            Defines the technique of check of crossing.
            </summary>
        </member>
        <member name="F:Engine.MapSystem.Region.CheckTypes.Bounds">
            <summary>
            Check crossing by bounds.
            </summary>
        </member>
        <member name="F:Engine.MapSystem.Region.CheckTypes.Center">
            <summary>
            Check hit of the center in bounds of region.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Region.ObjectInOutDelegate">
            <summary>
            Represents the method that handles a <see cref="E:Engine.MapSystem.Region.ObjectIn"/> and <see cref="E:Engine.MapSystem.Region.ObjectOut"/> events.
            </summary>
            <param name="entity">The region.</param>
            <param name="obj">The map object.</param>
        </member>
        <member name="T:Engine.MapSystem.FogType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.Fog"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Fog">
            <summary>
            Defines a fog on a map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Fog.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.Fog.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Fog.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Fog.Enabled">
            <summary>
            Gets or sets a value indicating whether the fog enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Fog.Mode">
            <summary>
            Gets or sets the type of fog. Allows to choose 3 types of fog: Linear (linear), Exp (exponential), Exp2 (exponential squared).
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Fog.Color">
            <summary>
            Gets or sets the color of the fog.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Fog.ExpDensity">
            <summary>
            Gets or sets a value of the speed attenuation effect of fog by the distance to the camera. Option is used only for exponential type of fog.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Fog.LinearStart">
            <summary>
            Gets or sets a value indicates at what distance from the camera the fog will begin to increase linearly. It only works for linear type of fog.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Fog.LinearEnd">
            <summary>
            Gets or sets a value indicates at what distance from the camera fog will work at full force. It only works for linear type of fog.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObjectType.BillboardItem.Color">
            <summary>
            Gets or sets the billboard color.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObjectType.BillboardItem.Size">
            <summary>
            Gets or sets the billboard dimensions.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObjectType.BillboardItem.MaterialName">
            <summary>
            Gets or sets the billboard material.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObjectType.BillboardItem.FadeVelocity">
            <summary>
            Gets or sets the melt velocity of attenuation when billboard will be invisible.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObjectType.BillboardItem.CameraVisibleCheck">
            <summary>
            Gets or sets value which indicates whether the billboard will become invisible 
            when its center is not visible from the camera.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObjectType.BillboardItem.CameraVisibleStartOffset">
            <summary>
            Gets or sets the distance with which begins check on visibility from the camera. 
            This space is necessary to ignore the nearest objects. Such as for example the player.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObject.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObject.BillboardItem.Color">
            <summary>
            Gets or sets the billboard color.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObject.BillboardItem.Size">
            <summary>
            Gets or sets the billboard dimensions.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObject.BillboardItem.MaterialName">
            <summary>
            Gets or sets the billboard material.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObject.BillboardItem.FadeVelocity">
            <summary>
            Gets or sets the melt velocity of attenuation when billboard will be invisible.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObject.BillboardItem.CameraVisibleCheck">
            <summary>
            Gets or sets value which indicates whether the billboard will become invisible 
            when its center is not visible from the camera.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObject.BillboardItem.CameraVisibleStartOffset">
            <summary>
            Gets or sets the distance with which begins check on visibility from the camera. 
            This space is necessary to ignore the nearest objects. Such as for example the player.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CameraAttachedObject.BillboardItem.Alpha">
            <summary>
            Gets or sets the alpha color of billboard.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.LightType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.Light"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Light">
            <summary>
            Defines a light sources on a map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Light.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.Light.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Light.OnRender(Engine.Renderer.Camera)">
            <summary>
            Called before the object it will be rendered.
            </summary>
            <param name="camera">The render camera.</param>
        </member>
        <member name="M:Engine.MapSystem.Light.OnCalculateMapBounds(Engine.MathEx.Bounds@)">
            <summary>
            Called when the bounds of object calculate.
            </summary>
            <remarks>
            By means of this method it is possible to change standard bounds to others.
            </remarks>
            <param name="bounds">The bounds of object</param>
        </member>
        <member name="P:Engine.MapSystem.Light.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.Enabled">
            <summary>
            A value indicating whether the light source enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.LightType">
            <summary>
            The type of the light source.
            </summary>
            <remarks>
            There are three types: spot (Spot), point light (Point), unidirectional light source (Directional).
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Light.DiffuseColor">
            <summary>
            The color of the diffuse light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.DiffusePower">
            <summary>
            Multiplier of diffuse color.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.SpecularColor">
            <summary>
            Glare from the light source color.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.SpecularPower">
            <summary>
            The color multiplier glare from the light source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.AttenuationNear">
            <summary>
            The distance from the camera, after which the power source will fade. Applies only to Spot and Point lights.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.AttenuationFar">
            <summary>
            The maximum range of the source. Applies only to Spot and Point lights.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.AttenuationPower">
            <summary>
            Speed attenuation depending on the distance to the camera. Applies only to Spot and Point lights.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.FFPAttenuationConstant">
            <summary>
            Constant attenuation factor in fixed function rendering mode (for very old video cards).
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.FFPAttenuationLinear">
            <summary>
            Linear attenuation factor in fixed function rendering mode (for very old video cards).
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.FFPAttenuationQuadric">
            <summary>
            Quadratic attenuation factor in fixed function rendering mode (for very old video cards).
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.SpotlightInnerAngle">
            <summary>
            The inner angle of the source type of spotlight.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.SpotlightOuterAngle">
            <summary>
            The outer angle of the source type of spotlight.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.SpotlightFalloff">
            <summary>
            Defines the attenuation of light from the inner to the outer cone of the source type of spotlight. The higher the value, the smoother fades.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.CastShadows">
            <summary>
            A value indicating whether the shadow generation from the source enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.AllowStaticLighting">
            <summary>
            A value indicating whether the inclusion in the process of calculating a static lighting enabled.
            </summary>
            <remarks>
            Static lighting can be configured using the static lighting Manager (type Base\StaticLightingManager).
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Light.AllowDynamicLighting">
            <summary>
            A value indicating whether source in rendering process of dynamic lighting enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Light.CustomShaderParameter">
            <summary>
            Special option for developers that allows you to transmit additional information about the source in the shader.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.PortalType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.Portal"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Portal">
            <summary>
            Defines a portal for a scene management.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Portal.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.Portal.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Portal.OnSetTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Called when the transformation of object is changed.
            </summary>
            <param name="pos">The new position.</param>
            <param name="rot">The new rotation.</param>
            <param name="scl">The new scale.</param>
        </member>
        <member name="M:Engine.MapSystem.Portal.OnCalculateMapBounds(Engine.MathEx.Bounds@)">
            <summary>
            Called when the bounds of object calculate.
            </summary>
            <remarks>
            By means of this method it is possible to change standard bounds to others.
            </remarks>
            <param name="bounds">The bounds of object</param>
        </member>
        <member name="M:Engine.MapSystem.Portal.Editor_CheckSelectionByRay(Engine.MathEx.Ray,System.Single@,System.Single@)">
            <summary>
            Caused when the user tries to select object the mouse.
            </summary>
            <param name="ray">The selection ray.</param>
            <param name="rayScale">The position of intersection on the ray.</param>
            <param name="priority">
            Priority of selection. It is by default equal <b>0.5</b>.
            The object with the highest priority will be selected.
            </param>
            <returns>Returns <b>true</b> the object is selected; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.Portal.Editor_RenderSelectionBorder(Engine.Renderer.Camera,System.Boolean,Engine.Renderer.DynamicMeshManager,Engine.Renderer.DynamicMeshManager.MaterialData)">
            <summary>
            Caused when it is necessary to draw a selection border in the Map Editor.
            </summary>
            <param name="camera">The destination camera.</param>
            <param name="simpleGeometry"></param>
            <param name="manager"></param>
            <param name="material"></param>
        </member>
        <member name="M:Engine.MapSystem.Portal.IsValid">
            <summary>
            Whether checks valid state a portal.
            </summary>
            <returns><b>true</b> if this portal is valid; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.Portal.GetGabaritePoints">
            <summary>
            Returns the list of dimensional points of a portal. <b>Don't modify</b>.
            </summary>
            <returns>The list of dimensional points of a portal.</returns>
        </member>
        <member name="M:Engine.MapSystem.Portal.GetGabaritePointsSeeToOutdoor">
            <summary>
            Don't modify
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.Portal.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Portal.Zone1">
            <summary>
            Gets the first zone connected for the this portal.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Portal.Zone2">
            <summary>
            Gets the second zone connected for the this portal.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Portal.Outdoor">
            <summary>
            The type of the portal.
            </summary>
            <remarks>
            Portal connects one zone with external space in the meaning True. Portal connects two zones in the meaning False.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Portal.VisibilityDistance">
            <summary>
            The maximum visibility distance of the portal. When 0, checking range is disabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Portal.Enabled">
            <summary>
            A value indicates whether portal enabled.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectCreateMesh">
            <summary>
            Defines a class of the Mesh of Objects Creation Collection.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectCreateObject">
            <summary>
            Defines the base item class of Objects Creation Collection.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateObject.Alias">
            <summary>
            Gets or sets the alias of attached object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateObject.Position">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateObject.Rotation">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateObject.Scale">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateObject.Count">
            <summary>
            Gets or sets the amount of created copies.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateObject.Group">
            <summary>
            Gets or sets the number of group.
            </summary>
            <remarks>
            At creation objects of only one group are created. The group gets out accidentally.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateObject.LifeTime">
            <summary>
            Gets or sets a life time of object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateObject.AttachToOwner">
            <summary>
            Gets or sets a value whether which indicates it is necessary to 
            attach object to the owner or to create free.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateMesh.ToString">
            <summary>
            Gets the particle system name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateMesh.MeshName">
            <summary>
            Gets or set the mesh name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateMesh.CastShadows">
            <summary>
            Gets or sets whether or not this object will cast shadows.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateMesh.UseOwnerScale">
            <summary>
            Gets or sets a value whether indicates he will consider scale of the parent, at calculation of the scale.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateMesh.ForceMaterial">
            <summary>
            Gets or sets the name of a material which will are replaced all sub meshes in a model.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Map">
            <summary>
            Represents a map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Bounds,System.UInt32,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by bounds.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Bounds,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by bounds.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Bounds,System.UInt32)">
            <summary>
            Carries out query of objects by bounds.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Bounds)">
            <summary>
            Carries out query of objects by bounds.
            </summary>
            <param name="bounds">The bounds.</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Sphere,System.UInt32,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by sphere.
            </summary>
            <param name="sphere">The sphere.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Sphere,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by sphere.
            </summary>
            <param name="sphere">The sphere.</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Sphere,System.UInt32)">
            <summary>
            Carries out query of objects by sphere.
            </summary>
            <param name="sphere">The sphere.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Sphere)">
            <summary>
            Carries out query of objects by sphere.
            </summary>
            <param name="sphere">The sphere.</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Box,System.UInt32,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by OBB.
            </summary>
            <param name="box">The OBB.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Box,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by OBB.
            </summary>
            <param name="box">The OBB.</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Box,System.UInt32)">
            <summary>
            Carries out query of objects by OBB.
            </summary>
            <param name="box">The OBB.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Box)">
            <summary>
            Carries out query of objects by OBB.
            </summary>
            <param name="box">The OBB.</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Frustum,System.UInt32,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by frustum.
            </summary>
            <param name="frustum">The frustum.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Frustum,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by frustum.
            </summary>
            <param name="frustum">The frustum.</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Frustum,System.UInt32)">
            <summary>
            Carries out query of objects by frustum.
            </summary>
            <param name="frustum">The frustum.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Frustum)">
            <summary>
            Carries out query of objects by frustum.
            </summary>
            <param name="frustum">The frustum.</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Plane[],System.UInt32,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by planes.
            </summary>
            <param name="planes">The planes.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Plane[],Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by planes.
            </summary>
            <param name="planes">The planes.</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Plane[],System.UInt32)">
            <summary>
            Carries out query of objects by planes.
            </summary>
            <param name="planes">The planes.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Plane[])">
            <summary>
            Carries out query of objects by planes.
            </summary>
            <param name="planes">The planes.</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Plane[],Engine.MathEx.Bounds,System.UInt32,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by planes.
            </summary>
            <param name="planes">The planes.</param>
            <param name="bounds">The bounds.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Plane[],Engine.MathEx.Bounds,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by planes.
            </summary>
            <param name="planes">The planes.</param>
            <param name="bounds">The bounds.</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Plane[],Engine.MathEx.Bounds,System.UInt32)">
            <summary>
            Carries out query of objects by planes.
            </summary>
            <param name="planes">The planes.</param>
            <param name="bounds">The bounds.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Plane[],Engine.MathEx.Bounds)">
            <summary>
            Carries out query of objects by planes.
            </summary>
            <param name="planes">The planes.</param>
            <param name="bounds">The bounds.</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Ray,System.UInt32,Engine.MapSystem.Map.GetObjectsRayDelegate)">
            <summary>
            Carries out query of objects by ray.
            </summary>
            <param name="ray">The ray.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <param name="callback">A call back method for reception of the objects.</param>
            <returns><b>true</b> if it has not been interrupted from callback delegate; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Ray,Engine.MapSystem.Map.GetObjectsRayDelegate)">
            <summary>
            Carries out query of objects by ray.
            </summary>
            <param name="ray">The ray.</param>
            <param name="callback">A call back method for reception of the objects.</param>
            <returns><b>true</b> if it has not been interrupted from callback delegate; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Ray,System.UInt32)">
            <summary>
            Carries out query of objects by ray.
            </summary>
            <param name="ray">The ray.</param>
            <param name="groupMask">The group mask. See MapObject.SceneGraphGroup."/></param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjects(Engine.MathEx.Ray)">
            <summary>
            Carries out query of objects by ray.
            </summary>
            <param name="ray">The ray.</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjectsByScreenRectangle(Engine.Renderer.Camera,Engine.MathEx.Rect,System.UInt32,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by screen rectangle.
            </summary>
            <param name="camera">The camera.</param>
            <param name="rect">The screen rectangle</param>
            <param name="groupMask">The group mask.</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjectsByScreenRectangle(Engine.Renderer.Camera,Engine.MathEx.Rect,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by screen rectangle.
            </summary>
            <param name="camera">The camera.</param>
            <param name="rect">The screen rectangle</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjectsByScreenRectangle(Engine.Renderer.Camera,Engine.MathEx.Rect,System.UInt32)">
            <summary>
            Carries out query of objects by screen rectangle.
            </summary>
            <param name="camera">The camera.</param>
            <param name="rect">The screen rectangle</param>
            <param name="groupMask">The group mask.</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjectsByScreenRectangle(Engine.Renderer.Camera,Engine.MathEx.Rect)">
            <summary>
            Carries out query of objects by screen rectangle.
            </summary>
            <param name="camera">The camera.</param>
            <param name="rect">The screen rectangle</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjectsByScreenRectangle(Engine.MathEx.Rect,System.UInt32,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by screen rectangle.
            </summary>
            <param name="rect">The screen rectangle</param>
            <param name="groupMask">The group mask.</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjectsByScreenRectangle(Engine.MathEx.Rect,Engine.MapSystem.Map.GetObjectsDelegate)">
            <summary>
            Carries out query of objects by screen rectangle.
            </summary>
            <param name="rect">The screen rectangle</param>
            <param name="callback">A call back method for reception of the objects.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjectsByScreenRectangle(Engine.MathEx.Rect,System.UInt32)">
            <summary>
            Carries out query of objects by screen rectangle.
            </summary>
            <param name="rect">The screen rectangle</param>
            <param name="groupMask">The group mask.</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjectsByScreenRectangle(Engine.MathEx.Rect)">
            <summary>
            Carries out query of objects by screen rectangle.
            </summary>
            <param name="rect">The screen rectangle</param>
            <returns>The output array.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetObjectsAttachedGuiObject(Engine.MathEx.Ray,Engine.MapSystem.MapObjectAttachedGui@,Engine.MathEx.Vec2@)">
            <summary>
            Gets the attached gui object by ray.
            </summary>
            <param name="ray">The ray.</param>
            <param name="attachedGuiObject">The return attached gui object.</param>
            <param name="screenPosition">The return screen position.</param>
            <returns><b>true</b> if the object has been finded; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.DoRenderUI(Engine.Renderer.GuiRenderer)">
            <summary>
            Render lens flares and debug information to gui renderer.
            </summary>
            <param name="renderer">The destination gui renderer.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.OnTick">
            <summary>
            Called when has occured Tick in the world. 
            </summary>
            <remarks>
            <para>This method will be caused, only if the entity is signed on timer events. To subscribe for timer events it is possible by means of method <see cref="M:Engine.EntitySystem.Entity.SubscribeToTickEvent"/>.</para>
            </remarks>
            <seealso cref="M:Engine.EntitySystem.Entity.SubscribeToTickEvent"/>
            <seealso cref="M:Engine.EntitySystem.Entity.UnsubscribeToTickEvent"/>
            <seealso cref="P:Engine.EntitySystem.Entity.TickDelta"/>
            <seealso cref="E:Engine.EntitySystem.Entity.Tick"/>
            <seealso cref="P:Engine.EntitySystem.EntitySystemWorld.GameFPS"/>
            <seealso cref="P:Engine.EntitySystem.EntitySystemWorld.Simulation"/>
        </member>
        <member name="M:Engine.MapSystem.Map.OnLoad(Engine.FileSystem.TextBlock)">
            <summary>
            Called while entity type is loading.
            </summary>
            <param name="block">The text block from which data of entity will be loaded.</param>
            <returns><b>true</b> if the entity successfully loaded; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.OnSave(Engine.FileSystem.TextBlock)">
            <summary>
            Called while entity type is saving.
            </summary>
            <param name="block">The text block in which data of entity will be saved.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.OnPreCreate">
            <summary>
            Called before the entity is added into the world.
            </summary>
            <seealso cref="M:Engine.EntitySystem.Entity.OnCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate(System.Boolean)"/>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
        </member>
        <member name="M:Engine.MapSystem.Map.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.Map.OnPostCreate2(System.Boolean)">
            <summary>
            Called after the entity is added into the world. This method is called after <see cref="M:Engine.EntitySystem.Entity.OnPostCreate(System.Boolean)"/> method.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.Map.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Map.GetVirtualFileDirectory">
            <summary>
            Returns the virtual file directory name of a map.
            </summary>
            <returns>The virtual file directory name of a map.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.GetSourceMapVirtualFileDirectory">
            <summary>
            Returns the virtual file directory name of a source map before world serialization.
            </summary>
            <returns>The virtual file directory name of a map.</returns>
        </member>
        <member name="M:Engine.MapSystem.Map.CreateAutoDeleteParticleSystem(System.String,Engine.MathEx.Vec3,Engine.MathEx.Quat,Engine.MathEx.Vec3)">
            <summary>
            Creates particle system which automatically removed at end of the work.
            </summary>
            <remarks>
            Particle system will be automatically removed at end of the work.
            </remarks>
            <param name="particleSystemName">The particle system name.</param>
            <param name="position">The position.</param>
            <param name="rotation">The rotation.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Engine.MapSystem.Map.CreateAutoDeleteParticleSystem(System.String,Engine.MathEx.Vec3)">
            <summary>
            Creates free particle system.
            </summary>
            <remarks>
            Particle system will be automatically removed at end of the work.
            </remarks>
            <param name="particleSystemName">The particle system name.</param>
            <param name="position">The position.</param>
        </member>
        <member name="P:Engine.MapSystem.Map.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.Instance">
            <summary>
            Gets an instance of the <see cref="T:Engine.MapSystem.Map"/>.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.Map.AddObjectToNodesEvent">
            <summary>
            Occurs when the object is added to nodes.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.Map.RemoveObjectFromNodesEvent">
            <summary>
            Occurs when the object is removed from nodes.
            </summary>
        </member>
        <member name="E:Engine.MapSystem.Map.Render">
            <summary>
            Occurs before a map it will be rendered.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.SourceMapVirtualFileName">
            <summary>
            Gets the virtual file path of a source map before world serialization.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowTechnique">
            <summary>
            Shadow technique.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowColor">
            <summary>
            Specifies the color of the shadow.
            </summary>
            <remarks>
            You can only set the contrast of the shadows for the shadows based on shadowmap.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowFarDistance">
            <summary>
            Rendering range of the shadows.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowPSSMSplitFactors">
            <summary>
            Settings distribution of textures depending on the distance to the type Parallel-Split Shadow Map.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowDirectionalLightTextureSize">
            <summary>
            Texture size for shadows from directional light.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowDirectionalLightMaxTextureCount">
            <summary>
            The maximum number of textures for generating shadows from directional lights.
            </summary>
            <remarks>
            If the amount of light sources for which you want to generate a shadow more than specified in this parameter, the shadows of the more distant light sources to the camera will be disabled.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowSpotLightTextureSize">
            <summary>
            Texture size for shadows from spotlights.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowSpotLightMaxTextureCount">
            <summary>
            The maximum number of textures for generating shadows from spotlights.
            </summary>
            <remarks>
            If the amount of light sources for which you want to generate a shadow more than specified in this parameter, the shadows of the more distant light sources to the camera will be disabled.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowPointLightTextureSize">
            <summary>
            Texture size for shadows from point lights.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.ShadowPointLightMaxTextureCount">
            <summary>
            The maximum number of textures for generating shadows from point lights.
            </summary>
            <remarks>
            If the amount of light sources for which you want to generate a shadow more than specified in this parameter, the shadows of the more distant light sources to the camera will be disabled.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Map.AmbientLight">
            <summary>
            The color of the background (ambient) light on the map.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.Fov">
            <summary>
            The camera viewing angle (field of view).
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.NearFarClipDistance">
            <summary>
            Clipping interval of the camera.
            </summary>
            <remarks>
            Parameter specifies two values - close and farther clip distance of visibility. The value of the close clipping, in addition to visibility, influences the distribution of values in the depth buffer. For best productivity, you need to aim to the minimum value of the farther view. For a better distribution in the depth buffer you need to aim to the maximum value near visibility.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Map.Zones">
            <summary>
            Don't modify.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.Portals">
            <summary>
            Don't modify.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.SoundDopplerEffectFactor">
            <summary>
            The coefficient of the Doppler effect in the calculation of playing sounds.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.SceneGraphSettings">
            <summary>
            The settings of the Octree based scene graph.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.InitialCollisionBounds">
            <summary>
            Gets the bounds of all shapes with <see cref="F:Engine.PhysicsSystem.ContactGroup.Collision">Collision</see>
            contact group at creating map.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.CameraProjectionType">
            <summary>
            The type of the camera. Allows you to choose from two options Perspective and Orthographic.
            </summary>
            <remarks>
            Perspective - the standard camera view. Appearance of the objects changes relative to the angle of view. Perspective Camera is a type of camera, which is similar to the camera in most 3D applications: it creates the prospect of three-dimensional images in the scene. Orthographic is a type of camera without perspective. Orthographic camera creates orthographic projection of the scene. It can be used to create direct projections (eg, top view or front) and axonometric projection. By using the CameraOrthoWindowHeight you can customize the height of the orthographic camera.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.Map.CameraOrthoWindowHeight">
            <summary>
            Adjusts the height of the orthographic camera type. See property CameraProjectionType for more information.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.StaticBatchingRenderingEnabled">
            <summary>
            Enables static batching optimization for rendering static geometry. Static batching is the special optimization to 
            reduce amount of draw calls on GPU. Static batching works only for StaticMesh objects.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.StaticBatchingPhysicsEnabledInMapEditor">
            <summary>
            Enables static batching optimization for collision detection of static geometry in Map Editor. Static batching 
            optimization is a unification of the physical bodies into large to reduce amount of bodies on the map. Static 
            batching works only for StaticMesh objects.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.StaticBatchingPhysicsEnabledInSimulation">
            <summary>
            Enables static batching optimization for collision detection of static geometry in simulation (Game.exe). Static 
            batching optimization is a unification of the physical bodies into large to reduce amount of bodies on the map. 
            Static batching works only for StaticMesh objects.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.SceneGraphSettingsProperties.AmountOfObjectsOutsideOctreeBoundsToRebuld">
            <summary>
            Limit number of objects outside the dimensions of count required to rebuild the graph.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.SceneGraphSettingsProperties.OctreeBoundsRebuildExpand">
            <summary>
            When calculating the graph, its dimensions will be additionally increased by the value of this parameter.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.SceneGraphSettingsProperties.MinNodeSize">
            <summary>
            The minimum size of the graph's nodes.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.SceneGraphSettingsProperties.ObjectCountThresholdToCreateChildNodes">
            <summary>
            The maximum amount of the number of objects in a node graph for creation the next hierarchy level.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Map.SceneGraphSettingsProperties.MaxNodeCount">
            <summary>
            The maximum number of nodes in the graph.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Map.ObjectToNodesDelegate">
            <summary>
            Represents the method that handles a <see cref="E:Engine.MapSystem.Map.AddObjectToNodesEvent"/> and 
            <see cref="E:Engine.MapSystem.Map.RemoveObjectFromNodesEvent"/> events.
            </summary>
            <param name="obj">The map object.</param>
        </member>
        <member name="T:Engine.MapSystem.Map.GetObjectsDelegate">
            <summary>
            Represents the method that handles a callback for objects querying.
            </summary>
            <param name="obj">Object received during inquiry.</param>
        </member>
        <member name="T:Engine.MapSystem.Map.GetObjectsRayDelegate">
            <summary>
            Represents the method that handles a callback for objects querying by ray.
            </summary>
            <param name="obj">Object received during inquiry.</param>
            <param name="scale">The ray intersection scale.</param>
            <returns><b>true</b> if such querying need continue; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Engine.MapSystem.Map.RenderDelegate">
            <summary>
            Represents the method that handles a <see cref="E:Engine.MapSystem.Map.Render"/> event.
            </summary>
            <param name="entity">The this map.</param>
            <param name="camera">The render camera.</param>
        </member>
        <member name="T:MapSystem.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MapSystem.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MapSystem.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.ZoneType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.Zone"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Zone">
            <summary>
            Defines a zone for a scene management.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Zone.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.Zone.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Zone.OnSetTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Called when the transformation of object is changed.
            </summary>
            <param name="pos">The new position.</param>
            <param name="rot">The new rotation.</param>
            <param name="scl">The new scale.</param>
        </member>
        <member name="M:Engine.MapSystem.Zone.OnCalculateMapBounds(Engine.MathEx.Bounds@)">
            <summary>
            Called when the bounds of object calculate.
            </summary>
            <remarks>
            By means of this method it is possible to change standard bounds to others.
            </remarks>
            <param name="bounds">The bounds of object</param>
        </member>
        <member name="M:Engine.MapSystem.Zone.Editor_CheckSelectionByRay(Engine.MathEx.Ray,System.Single@,System.Single@)">
            <summary>
            Caused when the user tries to select object the mouse.
            </summary>
            <param name="ray">The selection ray.</param>
            <param name="rayScale">The position of intersection on the ray.</param>
            <param name="priority">
            Priority of selection. It is by default equal <b>0.5</b>.
            The object with the highest priority will be selected.
            </param>
            <returns>Returns <b>true</b> the object is selected; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.Zone.Editor_RenderSelectionBorder(Engine.Renderer.Camera,System.Boolean,Engine.Renderer.DynamicMeshManager,Engine.Renderer.DynamicMeshManager.MaterialData)">
            <summary>
            Caused when it is necessary to draw a selection border in the Map Editor.
            </summary>
            <param name="camera">The destination camera.</param>
            <param name="simpleGeometry"></param>
            <param name="manager"></param>
            <param name="material"></param>
        </member>
        <member name="P:Engine.MapSystem.Zone.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Zone.Enabled">
            <summary>
            A value indicates whether zone enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Zone.VisibilityDistance">
            <summary>
            The maximum visibility distance of the zone. When 0, checking range is disabled.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.StaticLightingManagerType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.StaticLightingManager"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.StaticLightingManager">
            <summary>
            Defines a static precalculated lighting support of a map.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.PixelsPerUnit">
            <summary>
            The number of pixels per meter. The higher this value is, the better would be the calculation and bigger memory consumption.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.Lightmaps">
            <summary>
            A value indicating whether the static lightning enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.PackedLightmapsSize">
            <summary>
            The size of the texture maps.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.LightmapsFormat">
            <summary>
            The format of stored lightmaps.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.IrradianceVolume">
            <summary>
            A value indicating whether the Irradiance Volume enabled.
            </summary>
            <remarks>
            Irradiance Volume techmology is indended to illuminate the dynamic objects. Technically three-dimensional grid is generated when calculating, each cell has the lists of static light sources.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.IrradianceVolumeCellSize">
            <summary>
            The cell size of the Irradiance Volume. See IrradianceVolume property for more information.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.IrradianceVolumeLightsPerCell">
            <summary>
            The maximum number of light sources in one cell of Irradiance Volume. See IrradianceVolume property for more information.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.CalculateShadows">
            <summary>
            A value indicating whether the shadows calculation enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticLightingManager.Enable">
            <summary>
            A value indicating whether the manager enabled.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.CubemapZoneType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.CubemapZone"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.CubemapZone">
            <summary>
            Class for arrangement of zones for cubemaps.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <remarks>
            </remarks>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.OnCalculateMapBounds(Engine.MathEx.Bounds@)">
            <summary>
            Called when the bounds of object calculate.
            </summary>
            <remarks>
            By means of this method it is possible to change standard bounds to others.
            </remarks>
            <param name="bounds">The bounds of object</param>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.OnRenderFrame">
            <summary>
            Called before the render frame will be rendered.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.OnRender(Engine.Renderer.Camera)">
            <summary>
            Called before the object it will be rendered.
            </summary>
            <param name="camera">The render camera.</param>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.OnBeforeCubemapUpdate">
            <summary>
            Called before generation of a texture.
            </summary>
            <remarks>
            This method makes invisible dynamic objects and particle systems.
            The hide objects become visible after generation of a texture in a method <see cref="M:Engine.MapSystem.CubemapZone.OnAfterCubemapUpdate"/>.
            </remarks>
            <seealso cref="M:Engine.MapSystem.CubemapZone.OnAfterCubemapUpdate"/>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.OnAfterCubemapUpdate">
            <summary>
            Called after generation of a texture.
            </summary>
            <seealso cref="M:Engine.MapSystem.CubemapZone.OnBeforeCubemapUpdate"/>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.UpdateTexture">
            <summary>
            Regenerates a texture.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.SaveCubemapToFile(System.String)">
            <summary>
            Saves a generated texture on a disk.
            </summary>
            <param name="realFileName">The real file name.</param>
            <returns><b>true</b> if the texture successfully saved; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.GetTextureName">
            <summary>
            Returns the texture name.
            </summary>
            <returns>The texture name.</returns>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.GetGlobalZone">
            <summary>
            Gets a global texture.
            </summary>
            <returns><see cref="T:Engine.MapSystem.CubemapZone"/> if the global zone exists; otherwise, <b>null</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.Editor_CheckSelectionByRay(Engine.MathEx.Ray,System.Single@,System.Single@)">
            <summary>
            Caused when the user tries to select object the mouse.
            </summary>
            <param name="ray">The selection ray.</param>
            <param name="rayScale">The position of intersection on the ray.</param>
            <param name="priority">
            Priority of selection. It is by default equal <b>0.5</b>.
            The object with the highest priority will be selected.
            </param>
            <returns>Returns <b>true</b> the object is selected; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.CubemapZone.Editor_RenderSelectionBorder(Engine.Renderer.Camera,System.Boolean,Engine.Renderer.DynamicMeshManager,Engine.Renderer.DynamicMeshManager.MaterialData)">
            <summary>
            Caused when it is necessary to draw a selection border in the Map Editor.
            </summary>
            <param name="camera">The destination camera.</param>
            <param name="simpleGeometry"></param>
            <param name="manager"></param>
            <param name="material"></param>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.Enabled">
            <summary>
            A value indicating whether the cubemap zone enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.UpdateEveryFrame">
            <summary>
            It turns on updating cubemap each frame.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.TextureSize">
            <summary>
            The size of the cubemap texture.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.UseHDRTexture">
            <summary>
            Use 64-bit texture type for cubemap generation. 16-bit per color component.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.AllowHDRCompositor">
            <summary>
            During generation of cubemap enables using High Dynamic Range rendering.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.CustomTextureName">
            <summary>
            Use texture from the file instead of generation at runtime.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.GlobalZone">
            <summary>
            A value which indicates whether this zone is global zone. Global zone is used when none of zones do not cross search area.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.NearFarClipDistance">
            <summary>
            Defines the near and far clipping distance of the camera during the generation cubemap.
            </summary>
            <remarks>
            Using the first option, you can hide objects. Which are close to the camera. Using the second option, you can hide the objects in the distance to increase rendering speed.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.DrawDynamicObjects">
            <summary>
            Allows to set up visibility of objects with dynamic physical bodies during generation cubemap.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.DrawEffects">
            <summary>
            Allows to display effects during generation of cubemap.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.ShadowsEnabled">
            <summary>
            It turns on shadows generation during generation of cubemap.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.CubemapZone.MaterialScheme">
            <summary>
            It allows to activate a special mode for materials during generation cubemap.
            </summary>
            <remarks>
            You can specify \"Low\" technique, which turns off a many rendering features of materials in the rendering process, 
            thus increasing speed generation of cubemap.
            </remarks>
        </member>
        <member name="T:Engine.MapSystem.SunType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.Sun"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Sun">
            <summary>
            Defines a sun on a map.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Sun.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Sun.BillboardTexture">
            <summary>
            Path to a texture file with billboard image.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Sun.BillboardColor">
            <summary>
            The color multiplier of the billboard.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Sun.BillboardPower">
            <summary>
            The brightness modifier of the billboard.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Sun.BillboardSize">
            <summary>
            The size of the billboard.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Sun.BillboardRenderQueueGroup">
            <summary>
            Defines the place of rendering of the object relative to other objects.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Sun.BillboardOverridePosition">
            <summary>
            The position of the billboard. If nonzero, the billboard is drawn at the specified point relative to the camera. Otherwise, the coordinates for rendering the billboard are determined depending on the direction of the object.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapSystemWorld.MapDestroy">
            <summary>
            Destroys a map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapSystemWorld.GetMapObjectByBody(Engine.PhysicsSystem.Body)">
            <summary>
            Returns <see cref="T:Engine.MapSystem.MapObject"/> which contains the specified body.
            </summary>
            <param name="body">The body.</param>
            <returns>
            Returns <see cref="T:Engine.MapSystem.MapObject"/> which contains the specified body; 
            otherwise, <b>null</b>.
            </returns>
        </member>
        <member name="M:Engine.MapSystem.MapSystemWorld.MapLoad(System.String)">
            <summary>
            Loads a map from file.
            </summary>
            <param name="virtualFileName">The file name of virtual file system.</param>
            <returns><b>true</b> if the map has been loaded; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapSystemWorld.MapSave(System.String,System.Boolean)">
            <summary>
            Saves a map to file.
            </summary>
            <param name="virtualFileName">The file name of virtual file system.</param>
            <param name="compressEntityUINs"></param>
            <returns><b>true</b> if the map has been saved; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapSystemWorld.WorldLoad(Engine.EntitySystem.WorldSimulationTypes,System.String)">
            <summary>
            Loads a world from file.
            </summary>
            <param name="worldSimulationType">The world similation type.</param>
            <param name="virtualFileName">The file name of virtual file system.</param>
            <returns><b>true</b> if the world has been loaded; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapSystemWorld.WorldSave(System.String,System.Boolean)">
            <summary>
            Saves a world to file.
            </summary>
            <param name="virtualFileName">The file name of virtual file system.</param>
            <param name="compressEntityUINs"></param>
            <returns><b>true</b> if the world has been saved; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Engine.MapSystem.MapType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.Map"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectCreateMapObject">
            <summary>
            Defines a class of the MapObject of Objects Creation Collection.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateMapObject.ToString">
            <summary>
            Gets the type name of attached object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateMapObject.Type">
            <summary>
            Gets or sets the entity type of attached object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateMapObject.CopyVelocitiesFromParent">
            <summary>
            Gets or sets a value indicating whether velocities of bodies of physical model from the parent will be copied.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedObject">
            <summary>
            Defines base class of the attached objects in entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedObject.Owner">
            <summary>
            Gets the the object to which is attached this.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedObject.Alias">
            <summary>
            Gets or sets the alias of attached object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedObject.Body">
            <summary>
            Gets or sets the name a body of the parent to which the object will be attached.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedObject.BoneSlot">
            <summary>
            Gets or sets the name of the model bone slot to which the object is attached.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedObject.Position">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedObject.Rotation">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedObject.Scale">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedObject.Visible">
            <summary>
            Gets or sets this object whether to be visible or not.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedObject.OnlyForEditor">
            <summary>
            Gets or set a value indicates whether the object will be created only in the Map Editor.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedObject">
            <summary>
            Defines base class of the attached objects in entity.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectAttachedObject.SetBoneSlot(System.String)">
            <summary>
            Sets the mesh bone slot to which the object is attached.
            </summary>
            <param name="boneSlotName">The bone slot name.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObjectAttachedObject.GetGlobalTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Gets the global transformation of object.
            </summary>
            <param name="pos">The position.</param>
            <param name="rot">The rotation.</param>
            <param name="scl">The scale.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObjectAttachedObject.GetGlobalOldTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Gets the old global transformation of object.
            </summary>
            <param name="pos">The position.</param>
            <param name="rot">The rotation.</param>
            <param name="scl">The scale.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObjectAttachedObject.GetGlobalInterpolatedTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Gets the interpolated global transformation of object.
            </summary>
            <param name="pos">The position.</param>
            <param name="rot">The rotation.</param>
            <param name="scl">The scale.</param>
        </member>
        <member name="M:Engine.MapSystem.MapObjectAttachedObject.GetBox">
            <summary>
            Calculates the box of object.
            </summary>
            <returns>The box of object.</returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.TypeObject">
            <summary>
            Gets the object which defines initial options of data in entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.Alias">
            <summary>
            Gets or sets the alias of attached object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.Owner">
            <summary>
            Gets the the object to which is attached this.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.UseOwnerScale">
            <summary>
            Gets or sets a value whether indicates he will consider scale of the parent, at calculation of the scale.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.PositionOffset">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.RotationOffset">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.ScaleOffset">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.Body">
            <summary>
            Gets or sets the body of the parent to which the object is attached.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.BoneSlot">
            <summary>
            Gets or sets the model bone slot to which the object is attached.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedObject.Visible">
            <summary>
            Gets or sets this object whether to be visible or not.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectCreateBillboard">
            <summary>
            Defines a class of the Billboard of Objects Creation Collection.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateBillboard.ToString">
            <summary>
            Gets the material name of billboard.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateBillboard.Color">
            <summary>
            Gets or sets the billboard color.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateBillboard.Size">
            <summary>
            Gets or sets the billboard dimensions.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateBillboard.MaterialName">
            <summary>
            Gets or sets the billboard material.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.OccluderType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.Occluder"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.Occluder">
            <summary>
            Defines the occluder for a scene management.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Occluder.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.Occluder.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.Occluder.OnSetTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Called when the transformation of object is changed.
            </summary>
            <param name="pos">The new position.</param>
            <param name="rot">The new rotation.</param>
            <param name="scl">The new scale.</param>
        </member>
        <member name="M:Engine.MapSystem.Occluder.OnCalculateMapBounds(Engine.MathEx.Bounds@)">
            <summary>
            Called when the bounds of object calculate.
            </summary>
            <remarks>
            By means of this method it is possible to change standard bounds to others.
            </remarks>
            <param name="bounds">The bounds of object</param>
        </member>
        <member name="M:Engine.MapSystem.Occluder.Editor_CheckSelectionByRay(Engine.MathEx.Ray,System.Single@,System.Single@)">
            <summary>
            Caused when the user tries to select object the mouse.
            </summary>
            <param name="ray">The selection ray.</param>
            <param name="rayScale">The position of intersection on the ray.</param>
            <param name="priority">
            Priority of selection. It is by default equal <b>0.5</b>.
            The object with the highest priority will be selected.
            </param>
            <returns>Returns <b>true</b> the object is selected; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.Occluder.Editor_RenderSelectionBorder(Engine.Renderer.Camera,System.Boolean,Engine.Renderer.DynamicMeshManager,Engine.Renderer.DynamicMeshManager.MaterialData)">
            <summary>
            Caused when it is necessary to draw a selection border in the Map Editor.
            </summary>
            <param name="camera">The destination camera.</param>
            <param name="simpleGeometry"></param>
            <param name="manager"></param>
            <param name="material"></param>
        </member>
        <member name="P:Engine.MapSystem.Occluder.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.Occluder.Enabled">
            <summary>
            A value indicates whether occluder enabled.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedMapObject">
            <summary>
            Defines a class of the MapObject attached objects in entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedMapObject.ToString">
            <summary>
            Gets the type name of attached object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMapObject.Type">
            <summary>
            Gets or sets the entity type of attached object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMapObject.ChildBody">
            <summary>
            Gets or sets the name of a body of the attached object.
            This body will be connected with a body of parental object by fixed joint.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMapObject.DetachOnOwnerDestroy">
            <summary>
            Gets or sets a value whether which indicates object will be detached before 
            destruction of the owner or is destroyed.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedMapObject">
            <summary>
            Defines a class of the MapObject attached objects in entity.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMapObject.MapObject">
            <summary>
            Gets or sets the attached entity.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMapObject.ChildBody">
            <summary>
            Gets or sets the body of the attached object.
            This body connected with a body of parental object by fixed joint.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMapObject.DetachOnOwnerDestroy">
            <summary>
            Gets or sets a value whether which indicate object will be detached before 
            destruction of the owner or is destroyed.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedBillboard">
            <summary>
            Defines a class of the Billboard attached objects in entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedBillboard.ToString">
            <summary>
            Gets the material name of billboard.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedBillboard.Color">
            <summary>
            Gets or sets the billboard color.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedBillboard.Size">
            <summary>
            Gets or sets the billboard dimensions.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedBillboard.MaterialName">
            <summary>
            Gets or sets the billboard material.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedBillboard.FadeVelocity">
            <summary>
            Gets or sets the melt velocity of attenuation when billboard will be invisible.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedBillboard.CameraVisibleCheck">
            <summary>
            Gets or sets value which indicates whether the billboard will become invisible 
            when its center is not visible from the camera.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedBillboard.CameraVisibleStartOffset">
            <summary>
            Gets or sets the distance with which begins check on visibility from the camera. 
            This space is necessary to ignore the nearest objects. Such as for example the player.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedBillboard">
            <summary>
            Defines a class of the Billboard attached objects in entity.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedBillboard.SceneNode">
            <summary>
            Gets the parent scene node of billboard.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedBillboard.Color">
            <summary>
            Gets or sets the billboard color.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedBillboard.Size">
            <summary>
            Gets or sets the billboard dimensions.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedBillboard.MaterialName">
            <summary>
            Gets or sets the billboard material.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedBillboard.FadeVelocity">
            <summary>
            Gets or sets the melt velocity of attenuation when billboard will be invisible.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedBillboard.CameraVisibleCheck">
            <summary>
            Gets or sets value which indicates whether the billboard will become invisible 
            when its center is not visible from the camera.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedBillboard.CameraVisibleStartOffset">
            <summary>
            Gets or sets the distance with which begins check on visibility from the camera. 
            This space is necessary to ignore the nearest objects. Such as for example the player.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedBillboard.Alpha">
            <summary>
            Gets or sets the alpha color of billboard.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.SkyBoxType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.SkyBox"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.SkyBox">
            <summary>
            Defines a sky box of a map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.SkyBox.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.SkyBox.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.SkyBox.OnRender(Engine.Renderer.Camera)">
            <summary>
            Called before the object it will be rendered.
            </summary>
            <param name="camera">The render camera.</param>
        </member>
        <member name="P:Engine.MapSystem.SkyBox.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyBox.Enabled">
            <summary>
            A value indicating whether the skybox is enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyBox.TextureName">
            <summary>
            The path to texture of a sky box.
            </summary>
            <remarks>
            The texture must be cubemap which contains 6 separated images files with equal size and format. Example of naming files for creation cubemap texture: SkyBox_bk.jpg, SkyBox_dn.jpg, SkyBox_fr.jpg, SkyBox_lf.jpg, SkyBox_rt.jpg, SkyBox_up.jpg.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.SkyBox.Color">
            <summary>
            The color of the sky. When texture of a sky is specified this parameter works as color multiplier.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyBox.Power">
            <summary>
            The color multiplier of a sky color.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectCreateParticle">
            <summary>
            Defines a class of the Particle System of Objects Creation Collection.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateParticle.ToString">
            <summary>
            Gets the particle system name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateParticle.ParticleName">
            <summary>
            Gets or sets the particle system name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateParticle.OwnerRotation">
            <summary>
            Gets or sets a value whether indicates he will consider rotation of the parent, at calculation of the rotation.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedHelper">
            <summary>
            Defines a class of the Helper attached objects in entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedHelper.ToString">
            <summary>
            Gets the alias name of object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedHelper">
            <summary>
            Defines a class of the Helper attached objects in entity.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCurvePointType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.MapCurvePoint"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCurvePoint">
            <summary>
            Defines a point of <see cref="T:Engine.MapSystem.MapCurve"/>.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapCurvePoint.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.MapCurvePoint.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapCurvePoint.OnSetTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Called when the transformation of object is changed.
            </summary>
            <param name="pos">The new position.</param>
            <param name="rot">The new rotation.</param>
            <param name="scl">The new scale.</param>
        </member>
        <member name="M:Engine.MapSystem.MapCurvePoint.OnDeleteSubscribedToDeletionEvent(Engine.EntitySystem.Entity)">
            <summary>
            Called when the entity related with this entity is deleted.
            </summary>
            <param name="entity">The deleted entity.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.SubscribeToDeletionEvent(Engine.EntitySystem.Entity)"/>
            <seealso cref="M:Engine.EntitySystem.Entity.UnsubscribeToDeletionEvent(Engine.EntitySystem.Entity)"/>
            <seealso cref="E:Engine.EntitySystem.Entity.DeleteSubscribedToDeletionEvent"/>
        </member>
        <member name="P:Engine.MapSystem.MapCurvePoint.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapCurvePoint.Owner">
            <summary>
            Link to the curve which this point belongs to.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapCurvePoint.Time">
            <summary>
            Determines time at which the curve passes through the point.
            </summary>
            <remarks>
            Changing this setting it is able to change the order of the points in the curve.
            </remarks>
        </member>
        <member name="T:Engine.MapSystem.MapCurveType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.MapCurve"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCurve">
            <summary>
            Defines a curve on a map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.OnCreate">
            <summary>
            Called after the entity is created in the world.
            </summary>
            <remarks>
            <para>This method is not called if the entity is loaded.</para>
            </remarks>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPreCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate(System.Boolean)"/>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="E:Engine.EntitySystem.Entity.Create"/>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.OnUpdateCurve">
            <summary>
            Called when at updating a curve.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.OnDeleteSubscribedToDeletionEvent(Engine.EntitySystem.Entity)">
            <summary>
            Called when the entity related with this entity is deleted.
            </summary>
            <param name="entity">The deleted entity.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.SubscribeToDeletionEvent(Engine.EntitySystem.Entity)"/>
            <seealso cref="M:Engine.EntitySystem.Entity.UnsubscribeToDeletionEvent(Engine.EntitySystem.Entity)"/>
            <seealso cref="E:Engine.EntitySystem.Entity.DeleteSubscribedToDeletionEvent"/>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.OnRender(Engine.Renderer.Camera)">
            <summary>
            Called before the object it will be rendered.
            </summary>
            <param name="camera">The render camera.</param>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.CreatePoint(Engine.MapSystem.MapCurvePoint)">
            <summary>
            Creates a new point.
            </summary>
            <param name="afterPoint"></param>
            <returns>The created point.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.GetCurveTimeRange">
            <summary>
            Returns the interval of time of values of points.
            </summary>
            <returns>The interval of time of values of points.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.GetCurveMaxTime">
            <summary>
            Returns the maximum curve time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.CalculateCurvePointByTime(System.Single)">
            <summary>
            Calculates the curve position by time.
            </summary>
            <param name="time">The curve time.</param>
            <returns>The curve position.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.CalculateCurvePointByCoefficient(System.Single)">
            <summary>
            Calculates the curve position by coefficient.
            </summary>
            <param name="coefficient">Coefficient within the limits of from <b>0</b> to <b>1</b>.</param>
            <returns>The curve position.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.CalculateCurveRotationByTime(System.Single)">
            <summary>
            Calculates the curve rotation by time.
            </summary>
            <param name="time">The curve time.</param>
            <returns>The curve rotation.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapCurve.CalculateCurveRotationByCoefficient(System.Single)">
            <summary>
            Calculates the curve rotation by coefficient.
            </summary>
            <param name="coefficient">Coefficient within the limits of from <b>0</b> to <b>1</b>.</param>
            <returns>The curve rotation.</returns>
        </member>
        <member name="P:Engine.MapSystem.MapCurve.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapCurve.CurveType">
            <summary>
            Type of curve. The available types of curves: cubic spline (UniformCubicSpline), Bezier curves (Bezier).
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapCurve.AutomaticTimeStep">
            <summary>
            It turns on the automatic calculation of the time parameter for the points of the curve (property MapCurvePoint.Time). Mode disables when the setting value 0.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapCurve.Points">
            <summary>
            Gets the collection of a points.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCameraCurvePointType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.MapCameraCurvePoint"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCameraCurvePoint">
            <summary>
            Defines the camera point for <see cref="T:Engine.MapSystem.MapCameraCurve"/>.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapCameraCurvePoint.Editor_GetShowInformation">
            <summary>
            To receive the line information which will be shown in Map Editor when entity it is selected.
            </summary>
            <returns>Returns information string.</returns>
        </member>
        <member name="P:Engine.MapSystem.MapCameraCurvePoint.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapCameraCurvePoint.Fov">
            <summary>
            The angle of view field.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCameraCurveType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.MapCameraCurve"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCameraCurve">
            <summary>
            Defines the camera on a map moving on a curve.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapCameraCurve.Editor_GetShowInformation">
            <summary>
            To receive the line information which will be shown in Map Editor when entity it is selected.
            </summary>
            <returns>Returns information string.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapCameraCurve.OnUpdateCurve">
            <summary>
            Called when at updating a curve.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapCameraCurve.CalculateCameraPositionByTime(System.Single,Engine.MathEx.Vec3@,Engine.MathEx.Vec3@,Engine.MathEx.Vec3@,Engine.MathEx.Degree@)">
            <summary>
            Counts position of the camera from time.
            </summary>
            <param name="time">The time.</param>
            <param name="position">The position of a camera.</param>
            <param name="forward">The forward vector of a camera.</param>
            <param name="up">The up vector of a camera.</param>
            <param name="fov">The FOV of a camera.</param>
        </member>
        <member name="P:Engine.MapSystem.MapCameraCurve.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapCameraCurve.Fov">
            <summary>
            The angle of view field.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedLight">
            <summary>
            Defines a class of the Light attached objects in entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.LightType">
            <summary>
            Gets or sets the light type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.DiffuseColor">
            <summary>
            Gets or sets the color of the diffuse light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.DiffusePower">
            <summary>
            Gets or sets the power of the diffuse light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.SpecularColor">
            <summary>
            Gets or sets the color of the specular light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.SpecularPower">
            <summary>
            Gets or sets the power of the specular light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.AttenuationNear">
            <summary>
            Gets or sets the distance in which gradual loss in intensity begins take effect.
            </summary>
            <remarks>
            This property only applies in programmable pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.AttenuationFar">
            <summary>
            Gets or sets the distance in which intensity is reduced to zero.
            </summary>
            <remarks>
            This property applies in both the fixed function and the programmable pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.AttenuationPower">
            <summary>
            Gets or sets the curvature of the light attenuation.
            </summary>
            <remarks>
            This property only applies in programmable pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.FFPAttenuationConstant">
            <summary>
            Gets or sets the attenuation constant parameter of the light source ie how it diminishes with distance.
            </summary>
            <remarks>
            This property only applies in fixed function pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.FFPAttenuationLinear">
            <summary>
            Gets or sets the attenuation linear parameter of the light source ie how it diminishes with distance.
            </summary>
            <remarks>
            This property only applies in fixed function pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.FFPAttenuationQuadric">
            <summary>
            Gets or sets the attenuation Quadric parameter of the light source ie how it diminishes with distance.
            </summary>
            <remarks>
            This property only applies in fixed function pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.SpotlightInnerAngle">
            <summary>
            Gets or sets the angle covered by the spotlights inner cone.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.SpotlightOuterAngle">
            <summary>
            Gets or sets the angle covered by the spotlights outer cone.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.SpotlightFalloff">
            <summary>
            Gets or sets the falloff between the inner and outer cones of the spotlight.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedLight.CastShadows">
            <summary>
            Gets or sets whether or not this object will cast shadows.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedLight">
            <summary>
            Defines a class of the Light attached objects in entity.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.LightType">
            <summary>
            Gets or sets the light type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.DiffuseColor">
            <summary>
            Gets or sets the color of the diffuse light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.DiffusePower">
            <summary>
            Gets or sets the power of the diffuse light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.SpecularColor">
            <summary>
            Gets or sets the color of the specular light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.SpecularPower">
            <summary>
            Gets or sets the power of the specular light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.AttenuationNear">
            <summary>
            Gets or sets the distance in which gradual loss in intensity begins take effect.
            </summary>
            <remarks>
            This property only applies in programmable pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.AttenuationFar">
            <summary>
            Gets or sets the distance in which intensity is reduced to zero.
            </summary>
            <remarks>
            This property applies in both the fixed function and the programmable pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.AttenuationPower">
            <summary>
            Gets or sets the curvature of the light attenuation.
            </summary>
            <remarks>
            This property only applies in programmable pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.FFPAttenuationConstant">
            <summary>
            Gets or sets the attenuation constant parameter of the light source ie how it diminishes with distance.
            </summary>
            <remarks>
            This property only applies in fixed function pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.FFPAttenuationLinear">
            <summary>
            Gets or sets the attenuation linear parameter of the light source ie how it diminishes with distance.
            </summary>
            <remarks>
            This property only applies in fixed function pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.FFPAttenuationQuadric">
            <summary>
            Gets or sets the attenuation Quadric parameter of the light source ie how it diminishes with distance.
            </summary>
            <remarks>
            This property only applies in fixed function pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.SpotlightInnerAngle">
            <summary>
            Gets or sets the angle covered by the spotlights inner cone.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.SpotlightOuterAngle">
            <summary>
            Gets or sets the angle covered by the spotlights outer cone.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedLight.SpotlightFalloff">
            <summary>
            Gets or sets the falloff between the inner and outer cones of the spotlight.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedGui">
            <summary>
            Defines a class of the GUI attached objects in entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedGui.ToString">
            <summary>
            Gets the "GuiObject" text.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedGui">
            <summary>
            Defines a class of the GUI attached objects in entity.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedGui.ControlManager">
            <summary>
            Gets the control manager.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.SoundSourceType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.SoundSource"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.SoundSource">
            <summary>
            Defines a class to manage sound source on the map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.SoundSource.OnPostCreate2(System.Boolean)">
            <summary>
            Called after the entity is added into the world. This method is called after <see cref="M:Engine.EntitySystem.Entity.OnPostCreate(System.Boolean)"/> method.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.SoundSource.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.SoundSource.OnSetTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Called when the transformation of object is changed.
            </summary>
            <param name="pos">The new position.</param>
            <param name="rot">The new rotation.</param>
            <param name="scl">The new scale.</param>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.Enabled">
            <summary>
            A value indicating whether sound source enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.SoundName">
            <summary>
            Name of the sound file to be played by the source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.Volume">
            <summary>
            Sound volume.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.Priority">
            <summary>
            This parameter allows you to set the priority when playing sounds.
            </summary>
            <remarks>
            If a lot of sounds are played at the same time, the sounds of the lowest priority will be turned off because it is impossible to play all sounds because of the limitations of sound cards.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.Pitch">
            <summary>
            The playback speed of sound.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.RolloffMode">
            <summary>
            Calculation type of the damping volume depending on the distance from the camera.
            </summary>
            <remarks>
            <para>There are three types: Logarithmic (Logarithmic), Linear (Linear), manually (Manually).</para>
            <para>By using the type Manually programmer can specify attenuation formula as any spline.</para>
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.MinDistance">
            <summary>
            The minimum distance from the listener, after which the sound begins to weaken.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.MaxDistance">
            <summary>
            The maximum distance from the listener, after which no sound is heard.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.RolloffLogarithmicFactor">
            <summary>
            Damping factor for the logarithmic rolloff mode.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.Streaming">
            <summary>
            This parameter enables streaming reading from the file while playing.
            </summary>
            <remarks>
            We recommend you to use this parameter for large files, because, by default, sounds are loaded into memory.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.SoundSource.ReplayDelay">
            <summary>
            The delay between the completion of playing sound and playing it again.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.StaticMeshType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.StaticMesh"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.StaticMesh">
            <summary>
            Defines the static mesh.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.StaticMesh.OnLoad(Engine.FileSystem.TextBlock)">
            <summary>
            Called while entity type is loading.
            </summary>
            <param name="block">The text block from which data of entity will be loaded.</param>
            <returns><b>true</b> if the entity successfully loaded; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.StaticMesh.OnSave(Engine.FileSystem.TextBlock)">
            <summary>
            Called while entity type is saving.
            </summary>
            <param name="block">The text block in which data of entity will be saved.</param>
        </member>
        <member name="M:Engine.MapSystem.StaticMesh.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.StaticMesh.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.StaticMesh.OnRender(Engine.Renderer.Camera)">
            <summary>
            Called before the object it will be rendered.
            </summary>
            <param name="camera">The render camera.</param>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.Enabled">
            <summary>
            A value indicating whether the object enabled in a scene.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.MeshName">
            <summary>
            The file path to the 3D model.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.Collision">
            <summary>
            A value indicating whether a physical body for determination of collisions created.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.CollisionMaterialName">
            <summary>
            Type of physical material for determination of collisions. It allows to set up physical characteristics of a surface of object.
            </summary>
            <remarks>
            Besides the developer can add his own types of materials in the Data\Base\Constants\PhysicsSystem.config file.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.CollisionSpecialMeshName">
            <summary>
            Allows you to override the original data of the 3D model when creating body for collision detection.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.CollisionVehicleDrivableSurface">
            <summary>
            Allows you to use the body for collision detection as a surface for vehicles (cars).
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.RenderQueueGroup">
            <summary>
            This parameter allows you to set the order of drawing opaque objects.
            </summary>
            <remarks>
            It specifies the position of an object in the queue rendering objects. Effects only the objects with opaque materials.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.TransparentObjectSortPriority">
            <summary>
            This parameter allows you to set the order of drawing transparent objects.
            </summary>
            <remarks>
            It specifies the position of an object in the queue rendering objects. Effects only the objects with transparent materials.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.ForceMaterial">
            <summary>
            Overrides materials of 3D model.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.SplitGeometry">
            <summary>
            It allows you to cut the 3D model into parts automatically in order to optimize the rendering of the object on the screen.
            </summary>
            <remarks>
            This feature allows you to optimize the rendering due to the fact that unvisible parts of the cut 3D model will be quickly thrown out of the rendering process. This feature is useful for large objects such as terrain, buildings, rooms. Sizes of the parts are specified in the property SplitGeometryPieceSize.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.SplitGeometryPieceSize">
            <summary>
            Specifies the size of the pieces in the automatic cutting of the 3D model. See the description of the property SplitGeometry for more information.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.AllowDecals">
            <summary>
            Allows to put decals on the geometry of 3D object model.
            </summary>
            <remarks>
            Decal is a geometry that overlaps the geometry of 3D models from other objects. Typical examples of decals may be drawing stains on the walls, traces of the explosions.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.CastDynamicShadows">
            <summary>
            A value indicating whether the displaying shadows from 3D model of the object enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.CastStaticShadows">
            <summary>
            A value indicating whether the shadows from 3D model of the object in the process of calculating the static lighting enabled.
            </summary>
            <remarks>
            It is possible to set up static lighting using the manager of static lighting (Base/StaticLightingManager.type).
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.ReceiveStaticShadows">
            <summary>
            Allows the application to the surface of the shadow static lighting.
            </summary>
            <remarks>
            A manager of static lighting is intended to configure static lighting (Base/StaticLightingManager.type).
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.RenderingDistance">
            <summary>
            It is the maximum distance between the camera and the object after which the object is no longer rendered. A value of zero means that the visibility of the object will not be limited depending on the distance.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.RenderingDistanceForShadows">
            <summary>
            It is the maximum distance between the camera and the object after which the shadows of the objects are no longer rendered. A value of zero means that the visibility of the shadows will not be limited depending on the distance.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.AllowStaticBatching">
            <summary>
            A value indicating that the using of the static batching feature is allowed for this object. Static batching is the 
            feature to improve rendering and physics performance. 1. Enables static batching optimization for rendering static 
            geometry. Static batching is a special optimization that reduce the amount of draw calls on GPU. 2. Enables static 
            batching optimization for collision detection of static geometry. Static batching optimization merges physical bodies 
            into big tiles in order to reduce the amount of bodies on the map. To enable static batching feature see properties 
            of Map object: Map.StaticBatchingRenderingEnabled, Map.StaticBatchingPhysicsEnabledInMapEditor, 
            Map.StaticBatchingPhysicsEnabledInSimulation.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.StaticMesh.AllowGeometryInstancing">
            <summary>
            A value indicating that the using Hardware Geometry Instancing feature is allowed for this object. 
            Hardware Geometry Instancing is the special optimization to reduce amount of draw calls on GPU.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectCreateLight">
            <summary>
            Defines a class of the Light of Objects Creation Collection.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateLight.ToString">
            <summary>
            Gets the light type name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.LightType">
            <summary>
            Gets or sets the light type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.DiffuseColor">
            <summary>
            Gets or sets the color of the diffuse light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.DiffusePower">
            <summary>
            Gets or sets the power of the diffuse light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.SpecularColor">
            <summary>
            Gets or sets the color of the specular light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.SpecularPower">
            <summary>
            Gets or sets the power of the specular light given off by this source.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.AttenuationNear">
            <summary>
            Gets or sets the distance in which gradual loss in intensity begins take effect.
            </summary>
            <remarks>
            This property only applies in programmable pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.AttenuationFar">
            <summary>
            Gets or sets the distance in which intensity is reduced to zero.
            </summary>
            <remarks>
            This property applies in both the fixed function and the programmable pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.AttenuationPower">
            <summary>
            Gets or sets the curvature of the light attenuation.
            </summary>
            <remarks>
            This property only applies in programmable pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.FFPAttenuationConstant">
            <summary>
            Gets or sets the attenuation constant parameter of the light source ie how it diminishes with distance.
            </summary>
            <remarks>
            This property only applies in fixed function pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.FFPAttenuationLinear">
            <summary>
            Gets or sets the attenuation linear parameter of the light source ie how it diminishes with distance.
            </summary>
            <remarks>
            This property only applies in fixed function pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.FFPAttenuationQuadric">
            <summary>
            Gets or sets the attenuation Quadric parameter of the light source ie how it diminishes with distance.
            </summary>
            <remarks>
            This property only applies in fixed function pipeline.
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.SpotlightInnerAngle">
            <summary>
            Gets or sets the angle covered by the spotlights inner cone.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.SpotlightOuterAngle">
            <summary>
            Gets or sets the angle covered by the spotlights outer cone.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.SpotlightFalloff">
            <summary>
            Gets or sets the falloff between the inner and outer cones of the spotlight.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateLight.CastShadows">
            <summary>
            Gets or sets whether or not this object will cast shadows.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail">
            <summary>
            Defines a class of the RibbonTrail attached objects in entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.ToString">
            <summary>
            Gets the count of chains.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.TrailLength">
            <summary>
            Gets or sets the length of the trail.
            </summary>
            <remarks>
            This sets the length of the trail, in world units. It also sets how
            far apart each segment will be, ie length / max_elements. 
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.MaxChainElements">
            <summary>
            Gets and sets the maximum number of chain elements per chain.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.MaterialName">
            <summary>
            Gets or sets the material name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.Chains">
            <summary>
            Gets the chains collection.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.LifeTimeAfterDestroy">
            <summary>
            Gets or sets the time which will exist ribbon trail after destruction of the owner.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.CastShadows">
            <summary>
            Gets or sets whether or not this object will cast shadows.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.Chain">
            <summary>
            Defines the ribbon trail chain.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.Chain.ToString">
            <summary>
            Returns the "Chain".
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.Chain.InitialColor">
            <summary>
            Gets or sets the starting ribbon colour for a given segment.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.Chain.InitialWidth">
            <summary>
            Gets or sets the starting ribbon width in world units.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.Chain.ChangeColor">
            <summary>
            Gets or sets the per-second fading amount.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedRibbonTrail.Chain.ChangeWidth">
            <summary>
            Gets or sets the change in ribbon width per second.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedRibbonTrail">
            <summary>
            Defines a class of the RibbonTrail attached objects in entity.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedRibbonTrail.RibbonTrail">
            <summary>
            Gets the ribbon trail.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedRibbonTrail.SceneNode">
            <summary>
            Gets the parent scene node of ribbon trail.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedRibbonTrail.LifeTimeAfterDestroy">
            <summary>
            Gets or sets the time which will exist ribbon trail after destruction of the owner.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedMesh">
            <summary>
            Defines a class of the Mesh attached objects in entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedMesh.ToString">
            <summary>
            Gets the mesh name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.MeshName">
            <summary>
            Gets or set the attached mesh name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.CastDynamicShadows">
            <summary>
            Gets or sets whether or not this object will cast shadows.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.LinkBonesToBodies">
            <summary>
            Gets or sets a value which indicates it is necessary to link bones to bodies of physics model.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.UseOwnerScale">
            <summary>
            Gets or sets a value whether indicates he will consider scale of the parent, at calculation of the scale.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.Collision">
            <summary>
            Gets or sets a value indicates whether the mesh will be added to collision.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.CollisionMaterialName">
            <summary>
            Gets or sets a name of a physical material. Property is used only if Collision = True.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.ForceMaterial">
            <summary>
            Gets or sets the name of a material which will are replaced all sub meshes in a model.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedMesh.MeshBoneSlot">
            <summary>
            Defines the mesh bone slot.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedMesh.MeshBoneSlot.ToString">
            <summary>
            Gets the slot name and bone name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.MeshBoneSlot.Name">
            <summary>
            Gets or sets the name of slot.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.MeshBoneSlot.BoneName">
            <summary>
            Gets or sets the name of model bone.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.MeshBoneSlot.Position">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedMesh.MeshBoneSlot.Rotation">
            <summary>
            Gets or sets the additional offset.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedMesh">
            <summary>
            Defines a class of the Mesh attached objects in entity.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.MeshName">
            <summary>
            Gets or sets mesh name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.MeshObject">
            <summary>
            Gets the mesh object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.SceneNode">
            <summary>
            Gets the parent scene node of mesh object.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.Collision">
            <summary>
            Gets or sets a value indicates whether the mesh will be added to collision.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.CollisionMaterialName">
            <summary>
            Gets or sets a name of a physical material. Property is used only if Collision = True.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.CastDynamicShadows">
            <summary>
            Gets or sets whether or not this object will cast shadows.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedMesh.MeshBoneSlot">
            <summary>
            Defines a bone slot.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectAttachedMesh.MeshBoneSlot.GetGlobalTransform(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@)">
            <summary>
            Returns bone global transform.
            </summary>
            <param name="pos">The position.</param>
            <param name="rot">The rotation.</param>
            <param name="scl">The scale.</param>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.MeshBoneSlot.Owner">
            <summary>
            Gets the owner.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.MeshBoneSlot.Name">
            <summary>
            Gets the slot name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.MeshBoneSlot.Bone">
            <summary>
            Gets the bone.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.MeshBoneSlot.PositionOffset">
            <summary>
            Gets or sets the position offset.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedMesh.MeshBoneSlot.RotationOffset">
            <summary>
            Gets or sets the rotation offset.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedSound">
            <summary>
            Defines a class of the Sound attached objects in entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedSound.ToString">
            <summary>
            Returns the sound file name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedSound.SoundName">
            <summary>
            Gets or sets the sound file name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedSound.Volume">
            <summary>
            Gets or sets the sound volume.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedSound.Priority">
            <summary>
            Gets or sets the priority of playing. Default is <b>0.5</b>.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedSound.Pitch">
            <summary>
            Gets or sets the sound pitch.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedSound.CalculateSoundVelocity">
            <summary>
            Needed calculate a velocity for the sound. The velocity of the sound is used for the Doppler effect.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedSound.MinDistance">
            <summary>
            Gets or sets the minimum distance, which is the distance from the listener at 
            which sounds in this buffer begin to be attenuated.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedSound">
            <summary>
            Defines a class of the Sound attached objects in entity.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectAttachedSound.SetSoundName(System.String,System.Boolean)">
            <summary>
            Changes sound.
            </summary>
            <param name="soundName">The sound name.</param>
            <param name="loop">The loop flag.</param>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedSound.SoundName">
            <summary>
            Gets the sound name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedSound.Volume">
            <summary>
            Gets or sets the sound volume.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedSound.Priority">
            <summary>
            Gets or sets the priority of playing. Default is <b>0.5</b>.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedSound.Pitch">
            <summary>
            Gets or sets the sound pitch.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedSound.CalculateSoundVelocity">
            <summary>
            Need calculate a velocity of the sound or not. The velocity of sound is used for the Doppler effect.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedSound.Channel">
            <summary>
            Gets the playing channel.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.LensFlareManagerType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.LensFlareManager"/> entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.Enabled">
            <summary>
            A value indicating whether manager flare enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.Color">
            <summary>
            The color multiplier of the flares.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.FadeSpeed">
            <summary>
            Speed of fading.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.Flares">
            <summary>
            The list of the flares.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.VisibilityCheckStartDistance">
            <summary>
            The distance from the camera when checking the visibility of flares begins.
            </summary>
            <remarks>
            This offset from the camera is useful for ignoring those objects that are very close to the camera. 
            </remarks>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.FlareItem.Texture">
            <summary>
            The path to the texture of the flare.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.FlareItem.Blending">
            <summary>
            The method of drawing the texture of the flare on the screen.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.FlareItem.Color">
            <summary>
            The color of the flare.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.FlareItem.Size">
            <summary>
            The size of the flare. It is indicated as a ratio of screen size vertically.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.FlareItem.DistanceFactor">
            <summary>
            The position of the flare.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.LensFlareManager.FlareItem.FadeSpeedFactor">
            <summary>
            The multiplier of fading speed of the flare.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectCreateObjectCollection">
            <summary>
            Defines the objects creation collection.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateObjectCollection.Load(Engine.FileSystem.TextBlock)">
            <summary>
            Loads the collection from the text block.
            </summary>
            <param name="block">The text block.</param>
            <returns><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateObjectCollection.Save(Engine.FileSystem.TextBlock)">
            <summary>
            Saves the collection to the text block.
            </summary>
            <param name="block">The text block.</param>
            <returns><b>true</b> if the entity has been saved; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateObjectCollection.IsExistsReferenceToObject(System.Object)">
            <summary>
            Whether to check up there is a link to object.
            </summary>
            <remarks>
            This method is necessary for causing from 
            <see cref="M:Engine.EntitySystem.EntityType.OnIsExistsReferenceToObject(System.Object)"/> 
            for normal work of the Resource Editor.
            </remarks>
            <param name="obj">The cheched object.</param>
            <returns><b>true</b> if a link to object is exists; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateObjectCollection.ChangeReferencesToObject(System.Object,System.Object)">
            <summary>
            Replaces the link of all objects to another.
            </summary>
            <remarks>
            This method is necessary for causing from 
            <see cref="M:Engine.EntitySystem.EntityType.OnChangeReferencesToObject(System.Object,System.Object)"/> 
            for normal work of the Resource Editor.
            </remarks>
            <param name="obj">The source link to object.</param>
            <param name="newValue">The new link to object.</param>
        </member>
        <member name="T:Engine.MapSystem.MapObjectTypeAttachedParticle">
            <summary>
            Defines a class of the Particle System attached objects in entity type.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectTypeAttachedParticle.ToString">
            <summary>
            Gets the particle system name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedParticle.ParticleName">
            <summary>
            Gets or sets the particle system name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedParticle.OwnerRotation">
            <summary>
            Gets or sets a value whether indicates he will consider rotation of the parent, at calculation of the rotation.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectTypeAttachedParticle.StartTime">
            <summary>
            Gets or sets the time from which will start to work particle system after creation.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectAttachedParticle">
            <summary>
            Defines a class of the Particle attached objects in entity.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedParticle.ParticleName">
            <summary>
            Gets the particle system name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedParticle.ParticleSystem">
            <summary>
            Gets the particle system.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedParticle.SceneNode">
            <summary>
            Gets the parent scene node of particle system.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedParticle.OwnerRotation">
            <summary>
            Gets or sets a value whether indicates he will consider rotation of the parent, at calculation of the rotation.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectAttachedParticle.StartTime">
            <summary>
            Gets or sets the time from which will start to work particle system after creation.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.SkyDomeType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.SkyDome"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.SkyDome">
            <summary>
            Defines a sky dome of a map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.SkyDome.OnCreate">
            <summary>
            Called after the entity is created in the world.
            </summary>
            <remarks>
            <para>This method is not called if the entity is loaded.</para>
            </remarks>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPreCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate(System.Boolean)"/>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="E:Engine.EntitySystem.Entity.Create"/>
        </member>
        <member name="M:Engine.MapSystem.SkyDome.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.SkyDome.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.SkyDome.OnRender(Engine.Renderer.Camera)">
            <summary>
            Called before the object it will be rendered.
            </summary>
            <param name="camera">The render camera.</param>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.Enabled">
            <summary>
            A value indicating whether the sky dome is enabled.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.Diffuse1Map">
            <summary>
            Settings of the first diffuse texture.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.Diffuse2Map">
            <summary>
            Settings of the second diffuse texture.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.Diffuse3Map">
            <summary>
            Settings of the third diffuse texture.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.Diffuse4Map">
            <summary>
            Settings of the fourth diffuse texture.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.HorizonMap">
            <summary>
            This texture overlays vertically. It allows to add smooth top-down transfer what makes it more real.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.Color">
            <summary>
            The multiplier of the color of the sky.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.Power">
            <summary>
            The color multiplier of sky color.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.MapItem.Texture">
            <summary>
            Path to the texture file.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.MapItem.Tiling">
            <summary>
            The frequency of texture tiling.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.MapItem.ScrollSpeed">
            <summary>
            The speed of texture animation.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.SkyDome.AdditionalMapItem.Blending">
            <summary>
            Specifies the blending mode with other diffuse maps.
            </summary>
            <remarks>
            Supported modes: Add (color addition), Modulate (color multiplication), ColorBlend (color blending), AlphaBlend (alpha-blending).
            </remarks>
        </member>
        <member name="T:Engine.MapSystem.MapCompositorManagerType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.MapCompositorManager"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCompositorManager">
            <summary>
            Defines a compositir manager for the map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapCompositorManager.OnPostCreate(System.Boolean)">
            <summary>
            Called after the entity is added into the world.
            </summary>
            <param name="loaded"><b>true</b> if the entity has been loaded; otherwise, <b>false</b>.</param>
            <seealso cref="M:Engine.EntitySystem.Entity.PostCreate"/>
            <seealso cref="M:Engine.EntitySystem.Entity.OnPostCreate2(System.Boolean)"/>
        </member>
        <member name="M:Engine.MapSystem.MapCompositorManager.OnDestroy">
            <summary>
            Called when the entity is removed from the world.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapCompositorManager.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapObjectCreateSound">
            <summary>
            Defines a class of the Sound of Objects Creation Collection.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapObjectCreateSound.ToString">
            <summary>
            Gets the sound file name.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateSound.SoundName">
            <summary>
            Gets or sets the sound file name.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateSound.Volume">
            <summary>
            Gets or sets the sound volume.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateSound.Priority">
            <summary>
            Gets or sets the priority of playing. Default is <b>0.5</b>.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateSound.Pitch">
            <summary>
            Gets or sets the sound pitch.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateSound.CalculateSoundVelocity">
            <summary>
            Needed calculate a velocity for the sound. The velocity of the sound is used for the Doppler effect.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapObjectCreateSound.MinDistance">
            <summary>
            Gets or sets the minimum distance, which is the distance from the listener at 
            which sounds in this buffer begin to be attenuated.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCameraType">
            <summary>
            Defines the <see cref="T:Engine.MapSystem.MapCamera"/> entity type.
            </summary>
        </member>
        <member name="T:Engine.MapSystem.MapCamera">
            <summary>
            Defines the camera on a map.
            </summary>
        </member>
        <member name="M:Engine.MapSystem.MapCamera.Editor_GetShowInformation">
            <summary>
            To receive the line information which will be shown in Map Editor when entity it is selected.
            </summary>
            <returns>Returns information string.</returns>
        </member>
        <member name="P:Engine.MapSystem.MapCamera.Type">
            <summary>
            Gets the entity type.
            </summary>
        </member>
        <member name="P:Engine.MapSystem.MapCamera.Fov">
            <summary>
            The angle of view field.
            </summary>
        </member>
    </members>
</doc>
