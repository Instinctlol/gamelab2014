<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProjectCommon</name>
    </assembly>
    <members>
        <member name="M:ProjectCommon.DynamicMeshManagerImpl.#ctor(System.Single)">
            <summary>
            
            </summary>
            <param name="maxLifeTimeNotUsedDataInCache">Specify Zero to disable caching.</param>
        </member>
        <member name="M:ProjectCommon.DynamicMeshManagerImpl.BlockImpl.SceneObjectCachingData.GetFromCacheExact(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@,ProjectCommon.DynamicMeshManagerImpl.MaterialDataImpl)">
            <summary>
            Get scene objects from the cache only if available scene objects with exact settings.
            </summary>
            <param name="pos"></param>
            <param name="rot"></param>
            <param name="scl"></param>
            <param name="material"></param>
            <returns></returns>
        </member>
        <member name="M:ProjectCommon.DynamicMeshManagerImpl.BlockImpl.SceneObjectCachingData.GetFromCacheNotExact(Engine.MathEx.Vec3@,Engine.MathEx.Quat@,Engine.MathEx.Vec3@,ProjectCommon.DynamicMeshManagerImpl.MaterialDataImpl,System.Boolean@,System.Boolean@)">
            <summary>
            Get scene objects from the cache.
            </summary>
            <param name="pos"></param>
            <param name="rot"></param>
            <param name="scl"></param>
            <param name="material"></param>
            <param name="exactTransform"></param>
            <param name="exactMaterial"></param>
            <returns></returns>
        </member>
        <member name="M:ProjectCommon.DynamicMeshManagerImpl.BlockImpl.SceneObjectCachingData.Add(ProjectCommon.DynamicMeshManagerImpl.SceneObject,System.Single)">
            <summary>
            Add scene object to the cache.
            </summary>
            <param name="sceneObject"></param>
            <param name="time"></param>
        </member>
        <member name="M:ProjectCommon.ExampleCustomInputDevice.Init">
            <summary>
            Initialize the device
            </summary>
            <returns>Returns true if initializng was successfully</returns>
        </member>
        <member name="M:ProjectCommon.ExampleCustomInputDevice.OnShutdown">
            <summary>
            Shutdown the device
            </summary>
        </member>
        <member name="M:ProjectCommon.ExampleCustomInputDevice.OnUpdateState">
            <summary>
            Update the device state. Calling at each tick.
            </summary>
        </member>
        <member name="M:ProjectCommon.ExampleCustomInputDevice.InitDevice">
            <summary>
            Initialize the device and register them in the InputDeviceManager
            </summary>
        </member>
        <member name="T:ProjectCommon.MyNativeDLL">
            <summary>
            This class is a example of custom native DLL connection.
            See \Game\Src\MyNativeDLL for native DLL example source code.
            </summary>
        </member>
        <member name="T:ProjectCommon.GameControlsManager">
            <summary>
            Represents the player control management.
            </summary>
        </member>
        <member name="M:ProjectCommon.GameControlsManager.Init">
            <summary>
            Initialization the class.
            </summary>
            <returns><b>true</b> if the object successfully initialized; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:ProjectCommon.GameControlsManager.Shutdown">
            <summary>
            Shutdown the class.
            </summary>
        </member>
        <member name="M:ProjectCommon.GameControlsManager.DoKeyDown(Engine.KeyEvent)">
            <summary>
            Sends the notice on pressing a system key.
            </summary>
            <param name="e">Key event arguments.</param>
            <returns><b>true</b> if such system key is used; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:ProjectCommon.GameControlsManager.DoKeyUp(Engine.KeyEvent)">
            <summary>
            Sends the notice on releasing a system key.
            </summary>
            <param name="e">Key event arguments.</param>
            <returns><b>true</b> if such system key is used; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:ProjectCommon.GameControlsManager.DoMouseDown(Engine.EMouseButtons)">
            <summary>
            Sends the notice on pressing a mouse button.
            </summary>
            <param name="button">A value indicating which button was clicked.</param>
            <returns><b>true</b> if such system key is used; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:ProjectCommon.GameControlsManager.DoMouseUp(Engine.EMouseButtons)">
            <summary>
            Sends the notice on releasing a mouse button.
            </summary>
            <param name="button">A value indicating which button was clicked.</param>
            <returns><b>true</b> if such system key is used; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:ProjectCommon.GameControlsManager.DoMouseMoveRelative(Engine.MathEx.Vec2)">
            <summary>
            Sends the notice on cursor moved.
            </summary>
            <param name="mouseOffset">Current mouse position.</param>
        </member>
        <member name="P:ProjectCommon.GameControlsManager.Instance">
            <summary>
            Gets an instance of the <see cref="T:ProjectCommon.GameControlsManager"/>.
            </summary>
        </member>
        <member name="P:ProjectCommon.GameControlsManager.Items">
            <summary>
            Gets the key information collection. <b>Don't modify</b>.
            </summary>
        </member>
        <member name="P:ProjectCommon.GameControlsManager.GameControlItem.DefaultKeyboardMouseValues">
            <summary>
            <b>Don't modify</b>.
            </summary>
        </member>
        <member name="P:ProjectCommon.GameControlsManager.GameControlItem.DefaultJoystickValues">
            <summary>
            <b>Don't modify</b>.
            </summary>
        </member>
        <member name="T:ProjectCommon.GameEngineInitialization">
            <summary>
            Class for execute actions after initialization of the engine.
            </summary>
            <remarks>
            It is class works in simulation application and editors (Resource Editor, Map Editor).
            </remarks>
        </member>
        <member name="T:ProjectCommon.ColorCorrectionCompositorInstance">
            <summary>
            Represents work with the ColorCorrection post effect.
            </summary>
        </member>
        <member name="T:ProjectCommon.GrayscaleCompositorInstance">
            <summary>
            Represents work with the Grayscale post effect.
            </summary>
        </member>
        <member name="T:ProjectCommon.FXAACompositorInstance">
            <summary>
            Represents work with the ShowDepth post effect.
            </summary>
        </member>
        <member name="T:ProjectCommon.LightScatteringCompositorInstance">
            <summary>
            LightScattering scene post processing compositor instance.
            </summary>
        </member>
        <member name="T:ProjectCommon.OVRCompositorInstance">
            <summary>
            Represents work with the OVR post effect.
            </summary>
        </member>
        <member name="T:ProjectCommon.ShowDepthCompositorInstance">
            <summary>
            Represents work with the ShowDepth post effect.
            </summary>
        </member>
        <member name="T:ProjectCommon.RadialBlurCompositorInstance">
            <summary>
            Represents work with the RadialBlur post effect.
            </summary>
        </member>
        <member name="T:ProjectCommon.SSAOCompositorInstance">
            <summary>
            Represents work with the SSAO post effect.
            </summary>
        </member>
        <member name="T:ProjectCommon.VignettingCompositorInstance">
            <summary>
            Represents work with the Vignetting post effect.
            </summary>
        </member>
        <member name="T:ProjectCommon.RenderingLowLevelMethodsImpl">
            <summary>
            This class is intended only for advanced users. By means this class the developer can change behavior 
            of getting the list of visible objects in the camera, getting the list of objects for shadow generation.
            </summary>
        </member>
        <member name="T:ProjectCommon.ProfilingToolWindow">
            <summary>
            Defines a window class for Profiling Tool.
            </summary>
        </member>
        <member name="T:ProjectCommon.GameMusic">
            <summary>
            Class for management of music in game.
            </summary>
        </member>
        <member name="M:ProjectCommon.GameMusic.MusicPlay(System.String,System.Boolean)">
            <summary>
            Play music.
            </summary>
            <param name="fileName">The file name.</param>
            <param name="loop">Looping flag.</param>
        </member>
        <member name="M:ProjectCommon.GameMusic.MusicStop">
            <summary>
            Stop music.
            </summary>
        </member>
        <member name="P:ProjectCommon.GameMusic.MusicChannelGroup">
            <summary>
            Gets the music channel group.
            </summary>
        </member>
        <member name="T:ProjectCommon.FPSWeaponMaterial">
            <summary>
            Material for correct rendering of weapons in a FPS mode.
            </summary>
        </member>
        <member name="T:ProjectCommon.ShaderBaseMaterial">
            <summary>
            Base template for shader materials.
            </summary>
        </member>
        <member name="T:ProjectCommon.SimpleExampleMaterial">
            <summary>
            Simple example of high level material.
            </summary>
        </member>
        <member name="T:ProjectCommon.VegetationMaterial">
            <summary>
            Material for grass and trees. Adds wave in the vertex shader.
            </summary>
        </member>
        <member name="P:ProjectCommon.VegetationMaterial.ReceiveObjectsPositionsFromVertices">
            <summary>
            Gets or sets a value which indicates it is necessary to reveice objects 
            positions from the vertices.
            </summary>
            <remarks>
            <para>
            Usually it is necessary for batched geometry (for waving).
            </para>
            <para>
            Positions will be taken from Type: TextureCoordinates, Index: 4.
            </para>
            </remarks>
        </member>
        <member name="T:ProjectCommon.BlurCompositorInstance">
            <summary>
            GaussianBlur scene post processing compositor instance.
            </summary>
        </member>
        <member name="T:ProjectCommon.LDRBloomCompositorInstance">
            <summary>
            Bloom for low dynamic range scene post processing compositor instance.
            </summary>
        </member>
        <member name="T:ProjectCommon.HeatVisionCompositorInstance">
            <summary>
            Represents work with the HeatVision post effect.
            </summary>
        </member>
        <member name="T:ProjectCommon.HDRCompositorInstance">
            <summary>
            HDR scene post processing compositor instance.
            </summary>
        </member>
        <member name="T:ProjectCommon.MotionBlurCompositorInstance">
            <summary>
            Represents work with the MotionBlur post effect.
            </summary>
        </member>
    </members>
</doc>
